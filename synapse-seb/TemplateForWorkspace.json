{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "synapse-seb"
		},
		"ls_source_cmptest_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_source_cmptest'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=sql-vo-cmp-dev-weu-001.database.windows.net;Initial Catalog=cmp-test"
		},
		"ls_source_dynamics_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_source_dynamics'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=sql-vo-dyn-acc-weu-001.database.windows.net;Initial Catalog=Dyn01DataDb01A"
		},
		"ls_sqldb_dwh_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_sqldb_dwh'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=sql-vo-cmp-dev-weu-001.database.windows.net;Initial Catalog=dwh"
		},
		"ls_sqldb_mdb_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_sqldb_mdb'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=sql-vo-cmp-dev-weu-001.database.windows.net;Initial Catalog=mdb"
		},
		"synapse-seb-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'synapse-seb-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:synapse-seb.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"sywsvocmpdevweu001-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'sywsvocmpdevweu001-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:sywsvocmpdevweu001.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"AzureSqlDatabase1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase1'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=synapse-sql-seb.database.windows.net;Initial Catalog=synapse-slq"
		},
		"Servicenow metadata - find parent tables_webUrl": {
			"type": "string"
		},
		"Servicenow metadata_webUrl": {
			"type": "string"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "secureString",
			"metadata": "Secure string for 'baseUrl' of 'AzureKeyVault1'"
		},
		"ls_kv_cmp_properties_typeProperties_baseUrl": {
			"type": "secureString",
			"metadata": "Secure string for 'baseUrl' of 'ls_kv_cmp'"
		},
		"t_dynamics_daily_07_30_freq": {
			"type": "string",
			"defaultValue": "Day"
		},
		"t_dynamics_daily_07_30_properties_typeProperties_recurrence_triggerSuffix": {
			"type": "int",
			"defaultValue": 1
		},
		"t_dynamics_daily_07_30_properties_typeProperties_recurrence_startTime": {
			"type": "string",
			"defaultValue": "2023-04-12T11:04:00"
		},
		"t_dynamics_daily_07_30_properties_typeProperties_recurrence_timeZone": {
			"type": "string",
			"defaultValue": "W. Europe Standard Time"
		},
		"t_dynamics_daily_07_30_properties_typeProperties_recurrence_schedule": {
			"type": "object",
			"defaultValue": {
				"minutes": [
					30
				],
				"hours": [
					7
				]
			}
		},
		"t_master_daily_07_freq": {
			"type": "string",
			"defaultValue": "Day"
		},
		"t_master_daily_07_properties_typeProperties_recurrence_triggerSuffix": {
			"type": "int",
			"defaultValue": 1
		},
		"t_master_daily_07_properties_typeProperties_recurrence_startTime": {
			"type": "string",
			"defaultValue": "2023-03-08T07:16:00"
		},
		"t_master_daily_07_properties_typeProperties_recurrence_timeZone": {
			"type": "string",
			"defaultValue": "W. Europe Standard Time"
		},
		"t_master_daily_07_properties_typeProperties_recurrence_schedule": {
			"type": "object",
			"defaultValue": {
				"minutes": [
					0
				],
				"hours": [
					7
				]
			}
		},
		"AutoResolveIntegrationRuntime_properties_typeProperties_computeProperties": {
			"type": "object",
			"defaultValue": {
				"location": "AutoResolve",
				"dataFlowProperties": {
					"computeType": "General",
					"coreCount": 8,
					"timeToLive": 0
				}
			}
		},
		"mpe_sywsvocmpdevweu001_dwh_sql_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/39f65c21-47e0-4565-88dc-f5ef56774287/resourceGroups/rg-vo-cmp-sql-dev-weu-001/providers/Microsoft.Sql/servers/sql-vo-cmp-dev-weu-001"
		},
		"mpe_sywsvocmpdevweu001_dynamics_sql_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/edc01e04-52e9-4a28-964d-87bd7f8ae257/resourceGroups/rg-vo-dyn-db-acc-weu-001/providers/Microsoft.Sql/servers/sql-vo-dyn-acc-weu-001"
		},
		"mpe_sywsvocmpdevweu001_stvocmpdevweu002_blob_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/39f65c21-47e0-4565-88dc-f5ef56774287/resourceGroups/rg-vo-cmp-app-dev-weu-001/providers/Microsoft.Storage/storageAccounts/stvocmpdevweu002"
		},
		"mpe_sywsvocmpdevweu001_stvocmpdevweu002_dfs_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/39f65c21-47e0-4565-88dc-f5ef56774287/resourceGroups/rg-vo-cmp-app-dev-weu-001/providers/Microsoft.Storage/storageAccounts/stvocmpdevweu002"
		},
		"synapse-ws-sql--sywsvocmpdevweu001_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/39f65c21-47e0-4565-88dc-f5ef56774287/resourceGroups/rg-vo-cmp-app-dev-weu-001/providers/Microsoft.Synapse/workspaces/sywsvocmpdevweu001"
		},
		"synapse-ws-sqlOnDemand--sywsvocmpdevweu001_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/39f65c21-47e0-4565-88dc-f5ef56774287/resourceGroups/rg-vo-cmp-app-dev-weu-001/providers/Microsoft.Synapse/workspaces/sywsvocmpdevweu001"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/00 MDB')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Lookup - Get all sources",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Select * from elt.metadatasystem\nwhere active =1 ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sql_mdb_table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach - Source",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup - Get all sources",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup - Get all sources').output.value",
								"type": "Expression"
							},
							"batchCount": 50,
							"activities": [
								{
									"name": "Switch - Choose Source",
									"description": "Use systemcode from elt.metadatasystem as input for this switch statement",
									"type": "Switch",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@item().systemcode",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "dynamics",
												"activities": [
													{
														"name": "Execute Pipeline 01 MDB Dynamics",
														"type": "ExecutePipeline",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"pipeline": {
																"referenceName": "01 MDB Dynamics",
																"type": "PipelineReference"
															},
															"waitOnCompletion": true,
															"parameters": {
																"system_code": {
																	"value": "@item().systemcode",
																	"type": "Expression"
																},
																"system_name": {
																	"value": "@item().systemname",
																	"type": "Expression"
																},
																"system_type": {
																	"value": "@item().systemtype",
																	"type": "Expression"
																}
															}
														}
													}
												]
											},
											{
												"value": "cmptest",
												"activities": [
													{
														"name": "Execute Pipeline 02 MDB CMP Test",
														"type": "ExecutePipeline",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"pipeline": {
																"referenceName": "02 MDB CMP test",
																"type": "PipelineReference"
															},
															"waitOnCompletion": true,
															"parameters": {
																"system_code": {
																	"value": "@item().systemcode",
																	"type": "Expression"
																},
																"system_name": {
																	"value": "@item().systemname",
																	"type": "Expression"
																},
																"system_type": {
																	"value": "@item().systemtype",
																	"type": "Expression"
																}
															}
														}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"process_run_id": {
						"type": "int",
						"defaultValue": -1
					},
					"process_run_date": {
						"type": "string",
						"defaultValue": "2023-02-28"
					}
				},
				"folder": {
					"name": "MDB"
				},
				"annotations": [],
				"lastPublishTime": "2020-10-16T08:50:32Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/ds_sql_mdb_table')]",
				"[concat(variables('workspaceId'), '/pipelines/01 MDB Dynamics')]",
				"[concat(variables('workspaceId'), '/pipelines/02 MDB CMP test')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/01 MDB Dynamics')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "LU_Tables",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT SCHEMA_NAME(T.schema_id) AS [SCHEMA_NAME],\n\t\tT.name AS [TABLE_NAME], \n       I.rows AS [ROWCOUNT] \nFROM   sys.tables AS T \n       INNER JOIN sys.sysindexes AS I \n               ON T.object_id = I.id \n                  AND I.indid < 2\nWHERE i.rows > 0",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_source_dynamics_table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "FE_INS_Metadata",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LU_Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LU_Tables').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 15,
							"activities": [
								{
									"name": "LU_Structure",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ',  '''' , string(item().Table_name) , '''' , 'AND TABLE_SCHEMA = ', '''' , string(item().Schema_name) , '''' )",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "ds_source_dynamics_table",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "Insert_Structure",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "LU_Structure",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[elt].[spInsertMetadata]",
										"storedProcedureParameters": {
											"Json": {
												"value": {
													"value": "@string(activity('LU_Structure').output.value)",
													"type": "Expression"
												},
												"type": "String"
											},
											"lSchema": {
												"value": {
													"value": "@item().SCHEMA_NAME",
													"type": "Expression"
												},
												"type": "String"
											},
											"lTable": {
												"value": {
													"value": "@item().TABLE_NAME",
													"type": "Expression"
												},
												"type": "String"
											},
											"SystemCode": {
												"value": {
													"value": "@pipeline().parameters.system_code",
													"type": "Expression"
												},
												"type": "String"
											},
											"SystemName": {
												"value": {
													"value": "@pipeline().parameters.system_name",
													"type": "Expression"
												},
												"type": "String"
											},
											"SystemType": {
												"value": {
													"value": "@pipeline().parameters.system_type",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_sqldb_mdb",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"process_run_id": {
						"type": "string",
						"defaultValue": "-1"
					},
					"system_code": {
						"type": "string"
					},
					"system_name": {
						"type": "string"
					},
					"system_type": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MDB"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-04T14:48:06Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/ds_source_dynamics_table')]",
				"[concat(variables('workspaceId'), '/linkedServices/ls_sqldb_mdb')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/02 MDB CMP test')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "LU_Tables",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT SCHEMA_NAME(T.schema_id) AS [SCHEMA_NAME],\n\t\tT.name AS [TABLE_NAME], \n       I.rows AS [ROWCOUNT] \nFROM   sys.tables AS T \n       INNER JOIN sys.sysindexes AS I \n               ON T.object_id = I.id \n                  AND I.indid < 2\nWHERE i.rows > 0",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_source_cmptest",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "FE_INS_Metadata",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LU_Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LU_Tables').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 15,
							"activities": [
								{
									"name": "LU_Structure",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ',  '''' , string(item().Table_name) , '''' , 'AND TABLE_SCHEMA = ', '''' , string(item().Schema_name) , '''' )",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "ds_source_cmptest",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "Insert_Structure",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "LU_Structure",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[elt].[spInsertMetadata]",
										"storedProcedureParameters": {
											"Json": {
												"value": {
													"value": "@string(activity('LU_Structure').output.value)",
													"type": "Expression"
												},
												"type": "String"
											},
											"lSchema": {
												"value": {
													"value": "@item().SCHEMA_NAME",
													"type": "Expression"
												},
												"type": "String"
											},
											"lTable": {
												"value": {
													"value": "@item().TABLE_NAME",
													"type": "Expression"
												},
												"type": "String"
											},
											"SystemCode": {
												"value": {
													"value": "@pipeline().parameters.system_code",
													"type": "Expression"
												},
												"type": "String"
											},
											"SystemName": {
												"value": {
													"value": "@pipeline().parameters.system_name",
													"type": "Expression"
												},
												"type": "String"
											},
											"SystemType": {
												"value": {
													"value": "@pipeline().parameters.system_type",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_sqldb_mdb",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"process_run_id": {
						"type": "string",
						"defaultValue": "-1"
					},
					"system_code": {
						"type": "string"
					},
					"system_name": {
						"type": "string"
					},
					"system_type": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MDB"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-04T14:48:06Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/ds_source_cmptest')]",
				"[concat(variables('workspaceId'), '/linkedServices/ls_sqldb_mdb')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/03 MDB ServiceNow Projects')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "LU_Tables",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT * FROM elt.MetadataTables\nWHERE IsActive = 1 AND SystemCode = 'snprojects'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sql_mdb_table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "FE_INS_Metadata",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LU_Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LU_Tables').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 15,
							"activities": [
								{
									"name": "LU_Structure",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"dataset": {
											"referenceName": "ds_source_servicenow_tableapi_http",
											"type": "DatasetReference",
											"parameters": {
												"relative_api_path": "sys_dictionary",
												"filter_on_table": {
													"value": "@item().EntityName",
													"type": "Expression"
												},
												"fields_to_include": "element,internal_type,max_length,unique,mandatory"
											}
										}
									}
								},
								{
									"name": "Insert_Structure",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "LU_Structure",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[elt].[spInsertMetadata]",
										"storedProcedureParameters": {
											"Json": {
												"value": {
													"value": "@string(activity('LU_Structure').output.value)",
													"type": "Expression"
												},
												"type": "String"
											},
											"lSchema": {
												"value": {
													"value": "@item().SCHEMA_NAME",
													"type": "Expression"
												},
												"type": "String"
											},
											"lTable": {
												"value": {
													"value": "@item().TABLE_NAME",
													"type": "Expression"
												},
												"type": "String"
											},
											"SystemCode": {
												"value": {
													"value": "@pipeline().parameters.system_code",
													"type": "Expression"
												},
												"type": "String"
											},
											"SystemName": {
												"value": {
													"value": "@pipeline().parameters.system_name",
													"type": "Expression"
												},
												"type": "String"
											},
											"SystemType": {
												"value": {
													"value": "@pipeline().parameters.system_type",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_sqldb_mdb",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"process_run_id": {
						"type": "string",
						"defaultValue": "-1"
					},
					"system_code": {
						"type": "string"
					},
					"system_name": {
						"type": "string"
					},
					"system_type": {
						"type": "string"
					}
				},
				"folder": {
					"name": "MDB"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-04T14:48:06Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/ds_sql_mdb_table')]",
				"[concat(variables('workspaceId'), '/datasets/ds_source_servicenow_tableapi_http')]",
				"[concat(variables('workspaceId'), '/linkedServices/ls_sqldb_mdb')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/10 SourceToRaw')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Lookup - Get all tables",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[elt].[spCopySrcToRaw]",
								"storedProcedureParameters": {
									"process_run_date": {
										"type": "Datetime",
										"value": {
											"value": "@pipeline().parameters.process_run_date",
											"type": "Expression"
										}
									},
									"process_run_id": {
										"type": "Int32",
										"value": {
											"value": "1",
											"type": "Expression"
										}
									},
									"use_case_code": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.use_case_code",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sql_mdb_table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Lookup - Get System Storage Days",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[elt].[spSystemStorageDays]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sql_mdb_table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach - Delete Old Data",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup - Get System Storage Days",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup - Get System Storage Days').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Delete Old Data",
									"type": "Delete",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_datalake_delete",
											"type": "DatasetReference",
											"parameters": {
												"folder_path": {
													"value": "@item().FolderPath",
													"type": "Expression"
												}
											}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobFSReadSettings",
											"recursive": true,
											"modifiedDatetimeEnd": {
												"value": "@{Adddays(utcnow(), item().StorageDays)}",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "ForEach - Source To Raw",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup - Get all tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup - Get all tables').output.value",
								"type": "Expression"
							},
							"batchCount": 50,
							"activities": [
								{
									"name": "Switch - Choose Copy Data",
									"type": "Switch",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "@item().source_system_name",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "Dyn01DataDb01A",
												"activities": [
													{
														"name": "Execute Pipeline 11",
														"type": "ExecutePipeline",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"pipeline": {
																"referenceName": "11 SourceToRaw Dynamics",
																"type": "PipelineReference"
															},
															"waitOnCompletion": true,
															"parameters": {
																"source_entity_structure": {
																	"value": "@json(item().source_entity_structure)",
																	"type": "Expression"
																},
																"source_entity_query": {
																	"value": "@item().source_entity_query",
																	"type": "Expression"
																},
																"sink_entity_file_name": {
																	"value": "@item().sink_entity_file_name",
																	"type": "Expression"
																},
																"sink_entity_folder_path": {
																	"value": "@item().sink_entity_folder_path",
																	"type": "Expression"
																},
																"sink_entity_structure": {
																	"value": "@json(item().sink_entity_structure)",
																	"type": "Expression"
																},
																"source_sink_mapping": {
																	"value": "@json(item().source_sink_mapping)",
																	"type": "Expression"
																},
																"process_run_id": {
																	"value": "@pipeline().parameters.process_run_id",
																	"type": "Expression"
																}
															}
														}
													},
													{
														"name": "spUpdateLastIncrement 11",
														"type": "SqlServerStoredProcedure",
														"dependsOn": [
															{
																"activity": "Execute Pipeline 11",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"storedProcedureName": "[elt].[spUpdateLastIncrement]",
															"storedProcedureParameters": {
																"source_system_name": {
																	"value": {
																		"value": "@item().source_system_name",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"source_entity_name": {
																	"value": {
																		"value": "@item().source_entity_name",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"source_entity_increment_column": {
																	"value": {
																		"value": "@item().source_entity_increment_column",
																		"type": "Expression"
																	},
																	"type": "String"
																}
															}
														},
														"linkedServiceName": {
															"referenceName": "ls_sqldb_mdb",
															"type": "LinkedServiceReference"
														}
													},
													{
														"name": "spUpdateLastProcessRun 11",
														"type": "SqlServerStoredProcedure",
														"dependsOn": [
															{
																"activity": "spUpdateLastIncrement 11",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"storedProcedureName": "[elt].[spUpdateLastProcessRun]",
															"storedProcedureParameters": {
																"process_run_date": {
																	"value": {
																		"value": "@pipeline().parameters.process_run_date",
																		"type": "Expression"
																	},
																	"type": "Datetime"
																},
																"source_system_name": {
																	"value": {
																		"value": "@item().source_system_name",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"source_entity_name": {
																	"value": {
																		"value": "@item().source_entity_name",
																		"type": "Expression"
																	},
																	"type": "String"
																}
															}
														},
														"linkedServiceName": {
															"referenceName": "ls_sqldb_mdb",
															"type": "LinkedServiceReference"
														}
													}
												]
											},
											{
												"value": "cmp-test",
												"activities": [
													{
														"name": "Execute Pipeline 12",
														"type": "ExecutePipeline",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"pipeline": {
																"referenceName": "12 SourceToRaw CMP test",
																"type": "PipelineReference"
															},
															"waitOnCompletion": true,
															"parameters": {
																"source_entity_structure": {
																	"value": "@json(item().source_entity_structure)",
																	"type": "Expression"
																},
																"source_entity_query": {
																	"value": "@item().source_entity_query",
																	"type": "Expression"
																},
																"sink_entity_file_name": {
																	"value": "@item().sink_entity_file_name",
																	"type": "Expression"
																},
																"sink_entity_folder_path": {
																	"value": "@item().sink_entity_folder_path",
																	"type": "Expression"
																},
																"sink_entity_structure": {
																	"value": "@json(item().sink_entity_structure)",
																	"type": "Expression"
																},
																"source_sink_mapping": {
																	"value": "@json(item().source_sink_mapping)",
																	"type": "Expression"
																},
																"process_run_id": {
																	"value": "@pipeline().parameters.process_run_id",
																	"type": "Expression"
																}
															}
														}
													},
													{
														"name": "spUpdateLastIncrement 12",
														"type": "SqlServerStoredProcedure",
														"dependsOn": [
															{
																"activity": "Execute Pipeline 12",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"storedProcedureName": "[elt].[spUpdateLastIncrement]",
															"storedProcedureParameters": {
																"source_system_name": {
																	"value": {
																		"value": "@item().source_system_name",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"source_entity_name": {
																	"value": {
																		"value": "@item().source_entity_name",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"source_entity_increment_column": {
																	"value": {
																		"value": "@item().source_entity_increment_column",
																		"type": "Expression"
																	},
																	"type": "String"
																}
															}
														},
														"linkedServiceName": {
															"referenceName": "ls_sqldb_mdb",
															"type": "LinkedServiceReference"
														}
													},
													{
														"name": "spUpdateLastProcessRun 12",
														"type": "SqlServerStoredProcedure",
														"dependsOn": [
															{
																"activity": "spUpdateLastIncrement 12",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"storedProcedureName": "[elt].[spUpdateLastProcessRun]",
															"storedProcedureParameters": {
																"process_run_date": {
																	"value": {
																		"value": "@pipeline().parameters.process_run_date",
																		"type": "Expression"
																	},
																	"type": "DateTime"
																},
																"source_system_name": {
																	"value": {
																		"value": "@item().source_system_name",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"source_entity_name": {
																	"value": {
																		"value": "@item().source_entity_name",
																		"type": "Expression"
																	},
																	"type": "String"
																}
															}
														},
														"linkedServiceName": {
															"referenceName": "ls_sqldb_mdb",
															"type": "LinkedServiceReference"
														}
													}
												]
											},
											{
												"value": "servicenow-projects",
												"activities": [
													{
														"name": "Execute Pipeline 13",
														"type": "ExecutePipeline",
														"dependsOn": [],
														"userProperties": [],
														"typeProperties": {
															"pipeline": {
																"referenceName": "13 SourceToRaw ServiceNow Projects",
																"type": "PipelineReference"
															},
															"waitOnCompletion": true,
															"parameters": {
																"source_entity_name": {
																	"value": "@item().source_entity_name",
																	"type": "Expression"
																},
																"sink_entity_folder_path": {
																	"value": "@item().sink_entity_folder_path",
																	"type": "Expression"
																},
																"sink_entity_file_name": {
																	"value": "@item().sink_entity_file_name",
																	"type": "Expression"
																},
																"source_sink_mapping": {
																	"value": "@json(item().source_sink_mapping)",
																	"type": "Expression"
																},
																"process_run_date": {
																	"value": "@pipeline().parameters.process_run_date",
																	"type": "Expression"
																}
															}
														}
													},
													{
														"name": "spUpdateLastIncrement 13",
														"type": "SqlServerStoredProcedure",
														"dependsOn": [
															{
																"activity": "Execute Pipeline 13",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"storedProcedureName": "[elt].[spUpdateLastIncrement]",
															"storedProcedureParameters": {
																"source_system_name": {
																	"value": {
																		"value": "@item().source_system_name",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"source_entity_name": {
																	"value": {
																		"value": "@item().source_entity_name",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"source_entity_increment_column": {
																	"value": {
																		"value": "@item().source_entity_increment_column",
																		"type": "Expression"
																	},
																	"type": "String"
																}
															}
														},
														"linkedServiceName": {
															"referenceName": "ls_sqldb_mdb",
															"type": "LinkedServiceReference"
														}
													},
													{
														"name": "spUpdateLastProcessRun 13",
														"type": "SqlServerStoredProcedure",
														"dependsOn": [
															{
																"activity": "spUpdateLastIncrement 13",
																"dependencyConditions": [
																	"Succeeded"
																]
															}
														],
														"policy": {
															"timeout": "7.00:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"storedProcedureName": "[elt].[spUpdateLastProcessRun]",
															"storedProcedureParameters": {
																"process_run_date": {
																	"value": {
																		"value": "@pipeline().parameters.process_run_date",
																		"type": "Expression"
																	},
																	"type": "Datetime"
																},
																"source_system_name": {
																	"value": {
																		"value": "@item().source_system_name",
																		"type": "Expression"
																	},
																	"type": "String"
																},
																"source_entity_name": {
																	"value": {
																		"value": "@item().source_entity_name",
																		"type": "Expression"
																	},
																	"type": "String"
																}
															}
														},
														"linkedServiceName": {
															"referenceName": "ls_sqldb_mdb",
															"type": "LinkedServiceReference"
														}
													}
												]
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"process_run_id": {
						"type": "int",
						"defaultValue": -1
					},
					"process_run_date": {
						"type": "string"
					},
					"use_case_code": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ELT DWH/10 SourceToRaw"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-08T16:08:10Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/ds_sql_mdb_table')]",
				"[concat(variables('workspaceId'), '/datasets/ds_datalake_delete')]",
				"[concat(variables('workspaceId'), '/pipelines/11 SourceToRaw Dynamics')]",
				"[concat(variables('workspaceId'), '/linkedServices/ls_sqldb_mdb')]",
				"[concat(variables('workspaceId'), '/pipelines/12 SourceToRaw CMP test')]",
				"[concat(variables('workspaceId'), '/pipelines/13 SourceToRaw ServiceNow Projects')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/11 SourceToRaw Dynamics')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy - Source To Raw",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@pipeline().parameters.source_entity_query",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"value": "@pipeline().parameters.source_sink_mapping",
								"type": "Expression"
							}
						},
						"inputs": [
							{
								"referenceName": "ds_source_dynamics_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_datalake",
								"type": "DatasetReference",
								"parameters": {
									"Filesystem": "raw",
									"FolderPath": {
										"value": "@pipeline().parameters.sink_entity_folder_path",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.sink_entity_file_name",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"source_entity_structure": {
						"type": "array"
					},
					"source_entity_query": {
						"type": "string"
					},
					"sink_entity_file_name": {
						"type": "string"
					},
					"sink_entity_folder_path": {
						"type": "string"
					},
					"sink_entity_structure": {
						"type": "array"
					},
					"source_sink_mapping": {
						"type": "array"
					},
					"process_run_id": {
						"type": "int"
					}
				},
				"folder": {
					"name": "ELT DWH/10 SourceToRaw"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-08T16:08:09Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/ds_source_dynamics_table')]",
				"[concat(variables('workspaceId'), '/datasets/ds_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/12 SourceToRaw CMP test')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy - Source To Raw",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@pipeline().parameters.source_entity_query",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"value": "@pipeline().parameters.source_sink_mapping",
								"type": "Expression"
							}
						},
						"inputs": [
							{
								"referenceName": "ds_source_cmptest",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_datalake",
								"type": "DatasetReference",
								"parameters": {
									"Filesystem": "raw",
									"FolderPath": {
										"value": "@pipeline().parameters.sink_entity_folder_path",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.sink_entity_file_name",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"source_entity_structure": {
						"type": "array"
					},
					"source_entity_query": {
						"type": "string"
					},
					"sink_entity_file_name": {
						"type": "string"
					},
					"sink_entity_folder_path": {
						"type": "string"
					},
					"sink_entity_structure": {
						"type": "array"
					},
					"source_sink_mapping": {
						"type": "array"
					},
					"process_run_id": {
						"type": "int"
					}
				},
				"folder": {
					"name": "ELT DWH/10 SourceToRaw"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-08T16:08:09Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/ds_source_cmptest')]",
				"[concat(variables('workspaceId'), '/datasets/ds_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/13 SourceToRaw ServiceNow Projects')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy - Source To Raw JSON",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"EndCondition:$.result": "Empty",
									"QueryParameters.{offset}": "RANGE:0::1000"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"filePattern": "arrayOfObjects"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_source_servicenow_tableapi_rest",
								"type": "DatasetReference",
								"parameters": {
									"relative_api_path": {
										"value": "@pipeline().parameters.source_entity_name",
										"type": "Expression"
									},
									"current_date": {
										"value": "@pipeline().parameters.process_run_date",
										"type": "Expression"
									},
									"incremental": {
										"value": "@pipeline().parameters.is_incremental",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_datalake_json",
								"type": "DatasetReference",
								"parameters": {
									"Filesystem": "raw",
									"FolderPath": {
										"value": "@pipeline().parameters.sink_entity_folder_path",
										"type": "Expression"
									},
									"FileName": {
										"value": "@replace(pipeline().parameters.sink_entity_file_name, '.parquet', '.json')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Switch - Choose Copy Data",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "Copy - Source To Raw JSON",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@pipeline().parameters.source_entity_name",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "pm_project",
									"activities": [
										{
											"name": "Copy - Source To Raw Parquet 131",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "JsonSource",
													"storeSettings": {
														"type": "AzureBlobFSReadSettings",
														"recursive": true,
														"enablePartitionDiscovery": false
													},
													"formatSettings": {
														"type": "JsonReadSettings"
													}
												},
												"sink": {
													"type": "ParquetSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "ParquetWriteSettings"
													}
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"mappings": [
														{
															"source": {
																"path": "['u_estimated_start']"
															},
															"sink": {
																"name": "u_estimated_start",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['parent']"
															},
															"sink": {
																"name": "parent",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['opex_forecast_cost']"
															},
															"sink": {
																"name": "opex_forecast_cost",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['watch_list']"
															},
															"sink": {
																"name": "watch_list",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['phase_type']"
															},
															"sink": {
																"name": "phase_type",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['sys_updated_on']"
															},
															"sink": {
																"name": "sys_updated_on",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['skills']"
															},
															"sink": {
																"name": "skills",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['score']"
															},
															"sink": {
																"name": "score",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['top_program']"
															},
															"sink": {
																"name": "top_program",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['capex_cost']"
															},
															"sink": {
																"name": "capex_cost",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['state']"
															},
															"sink": {
																"name": "state",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['sys_created_by']"
															},
															"sink": {
																"name": "sys_created_by",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['goals']"
															},
															"sink": {
																"name": "goals",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['knowledge']"
															},
															"sink": {
																"name": "knowledge",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['impact']"
															},
															"sink": {
																"name": "impact",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['key_milestone']"
															},
															"sink": {
																"name": "key_milestone",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['active']"
															},
															"sink": {
																"name": "active",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['u_vendor']"
															},
															"sink": {
																"name": "u_vendor",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['demand']"
															},
															"sink": {
																"name": "demand",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['version']"
															},
															"sink": {
																"name": "version",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['investment_type']"
															},
															"sink": {
																"name": "investment_type",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['group_list']"
															},
															"sink": {
																"name": "group_list",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['capex_estimate_to_completion']"
															},
															"sink": {
																"name": "capex_estimate_to_completion",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['override_status']"
															},
															"sink": {
																"name": "override_status",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['score_risk']"
															},
															"sink": {
																"name": "score_risk",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['time_component_from_planned']"
															},
															"sink": {
																"name": "time_component_from_planned",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['end_date']"
															},
															"sink": {
																"name": "end_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['correlation_display']"
															},
															"sink": {
																"name": "correlation_display",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['top_task']"
															},
															"sink": {
																"name": "top_task",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['service_offering']"
															},
															"sink": {
																"name": "service_offering",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['follow_up']"
															},
															"sink": {
																"name": "follow_up",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['in_scope']"
															},
															"sink": {
																"name": "in_scope",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['execution_type']"
															},
															"sink": {
																"name": "execution_type",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['business_applications']"
															},
															"sink": {
																"name": "business_applications",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['show_on_program_status_report']"
															},
															"sink": {
																"name": "show_on_program_status_report",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['sub_tree_root']"
															},
															"sink": {
																"name": "sub_tree_root_link",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['comments_and_work_notes']"
															},
															"sink": {
																"name": "comments_and_work_notes",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['estimate_to_completion']"
															},
															"sink": {
																"name": "estimate_to_completion",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['remaining_duration']"
															},
															"sink": {
																"name": "remaining_duration",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['resource_allocated_cost']"
															},
															"sink": {
																"name": "resource_allocated_cost",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['risk_of_performing']"
															},
															"sink": {
																"name": "risk_of_performing",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['u_business_owner']"
															},
															"sink": {
																"name": "u_business_owner",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['project_schedule_date_format']"
															},
															"sink": {
																"name": "project_schedule_date_format",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['allow_dates_outside_schedule']"
															},
															"sink": {
																"name": "allow_dates_outside_schedule",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['escalation']"
															},
															"sink": {
																"name": "escalation",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['correlation_id']"
															},
															"sink": {
																"name": "correlation_id",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['risk_cost']"
															},
															"sink": {
																"name": "risk_cost",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['u_analysis']"
															},
															"sink": {
																"name": "u_analysis",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['made_sla']"
															},
															"sink": {
																"name": "made_sla",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['strategic_objectives']"
															},
															"sink": {
																"name": "strategic_objectives",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['wbs_order']"
															},
															"sink": {
																"name": "wbs_order",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['work_effort']"
															},
															"sink": {
																"name": "work_effort",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['user_input']"
															},
															"sink": {
																"name": "user_input",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['sys_created_on']"
															},
															"sink": {
																"name": "sys_created_on",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['route_reason']"
															},
															"sink": {
																"name": "route_reason",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['start_date_derived_from']"
															},
															"sink": {
																"name": "start_date_derived_from",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['project_type']"
															},
															"sink": {
																"name": "project_type",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['update_score_on_value_change']"
															},
															"sink": {
																"name": "update_score_on_value_change",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['closed_at']"
															},
															"sink": {
																"name": "closed_at",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['u_estimated_end']"
															},
															"sink": {
																"name": "u_estimated_end",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['u_plan_capacity']"
															},
															"sink": {
																"name": "u_plan_capacity",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['time_worked']"
															},
															"sink": {
																"name": "time_worked",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['u_proposal']"
															},
															"sink": {
																"name": "u_proposal",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['npv_value']"
															},
															"sink": {
																"name": "npv_value",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['work_end']"
															},
															"sink": {
																"name": "work_end",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['work_notes']"
															},
															"sink": {
																"name": "work_notes",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['benefits']"
															},
															"sink": {
																"name": "benefits",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['work_cost']"
															},
															"sink": {
																"name": "work_cost",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['assignment_group']"
															},
															"sink": {
																"name": "assignment_group",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['description']"
															},
															"sink": {
																"name": "description",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['effort']"
															},
															"sink": {
																"name": "effort",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['risk_of_not_performing']"
															},
															"sink": {
																"name": "risk_of_not_performing",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['title']"
															},
															"sink": {
																"name": "title",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['update_actual_effort_from_time_card']"
															},
															"sink": {
																"name": "update_actual_effort_from_time_card",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['duration']"
															},
															"sink": {
																"name": "duration",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['sys_id']"
															},
															"sink": {
																"name": "sys_id",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['marked_for_delete']"
															},
															"sink": {
																"name": "marked_for_delete",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['urgency']"
															},
															"sink": {
																"name": "urgency",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['constraint_date']"
															},
															"sink": {
																"name": "constraint_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['company']"
															},
															"sink": {
																"name": "company",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['end']"
															},
															"sink": {
																"name": "end",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['rate_model']"
															},
															"sink": {
																"name": "rate_model",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['approved_start_date']"
															},
															"sink": {
																"name": "approved_start_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['enablers']"
															},
															"sink": {
																"name": "enablers",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['approval']"
															},
															"sink": {
																"name": "approval",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['start']"
															},
															"sink": {
																"name": "start",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['model_id']"
															},
															"sink": {
																"name": "model_id",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['sys_tags']"
															},
															"sink": {
																"name": "sys_tags",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['html_description']"
															},
															"sink": {
																"name": "html_description",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['percent_complete']"
															},
															"sink": {
																"name": "percent_complete",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['schedule']"
															},
															"sink": {
																"name": "schedule",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['location']"
															},
															"sink": {
																"name": "location",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['risk']"
															},
															"sink": {
																"name": "risk",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['shadow']"
															},
															"sink": {
																"name": "shadow",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['wbs']"
															},
															"sink": {
																"name": "wbs",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['upon_reject']"
															},
															"sink": {
																"name": "upon_reject",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['forecast_cost']"
															},
															"sink": {
																"name": "forecast_cost",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['discount_rate']"
															},
															"sink": {
																"name": "discount_rate",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['time_card_preference']"
															},
															"sink": {
																"name": "time_card_preference",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['approval_history']"
															},
															"sink": {
																"name": "approval_history",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['rollup']"
															},
															"sink": {
																"name": "rollup",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['number']"
															},
															"sink": {
																"name": "number",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['schedule_start_date']"
															},
															"sink": {
																"name": "schedule_start_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['capex_forecast_cost']"
															},
															"sink": {
																"name": "capex_forecast_cost",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['opex_estimate_to_completion']"
															},
															"sink": {
																"name": "opex_estimate_to_completion",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['order']"
															},
															"sink": {
																"name": "order",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['phase']"
															},
															"sink": {
																"name": "phase",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['work_duration']"
															},
															"sink": {
																"name": "work_duration",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['goal']"
															},
															"sink": {
																"name": "goal",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['budget_cost']"
															},
															"sink": {
																"name": "budget_cost",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['cmdb_ci']"
															},
															"sink": {
																"name": "cmdb_ci",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['dependency']"
															},
															"sink": {
																"name": "dependency",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['remaining_effort']"
															},
															"sink": {
																"name": "remaining_effort",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['work_notes_list']"
															},
															"sink": {
																"name": "work_notes_list",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['priority']"
															},
															"sink": {
																"name": "priority",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['sys_domain_path']"
															},
															"sink": {
																"name": "sys_domain_path",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['business_unit']"
															},
															"sink": {
																"name": "business_unit",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['business_duration']"
															},
															"sink": {
																"name": "business_duration",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['score_value']"
															},
															"sink": {
																"name": "score_value",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['critical_path']"
															},
															"sink": {
																"name": "critical_path",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['status']"
															},
															"sink": {
																"name": "status",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['universal_request']"
															},
															"sink": {
																"name": "universal_request",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['business_capabilities']"
															},
															"sink": {
																"name": "business_capabilities",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['short_description']"
															},
															"sink": {
																"name": "short_description",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['work_start']"
															},
															"sink": {
																"name": "work_start",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['time_constraint']"
															},
															"sink": {
																"name": "time_constraint",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['additional_assignee_list']"
															},
															"sink": {
																"name": "additional_assignee_list",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['sys_class_name']"
															},
															"sink": {
																"name": "sys_class_name",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['closed_by']"
															},
															"sink": {
																"name": "closed_by",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['top_portfolio']"
															},
															"sink": {
																"name": "top_portfolio",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['calculation_type']"
															},
															"sink": {
																"name": "calculation_type",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['reassignment_count']"
															},
															"sink": {
																"name": "reassignment_count",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['schedule_end_date']"
															},
															"sink": {
																"name": "schedule_end_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['assigned_to']"
															},
															"sink": {
																"name": "assigned_to",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['start_date']"
															},
															"sink": {
																"name": "start_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['u_actual_hours']"
															},
															"sink": {
																"name": "u_actual_hours",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['mpp_task_id']"
															},
															"sink": {
																"name": "mpp_task_id",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['u_number_of_strategies']"
															},
															"sink": {
																"name": "u_number_of_strategies",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['sla_due']"
															},
															"sink": {
																"name": "sla_due",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['has_conflict']"
															},
															"sink": {
																"name": "has_conflict",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['upon_approval']"
															},
															"sink": {
																"name": "upon_approval",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['u_governing_body_single']"
															},
															"sink": {
																"name": "u_governing_body_single",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['impacted_business_units']"
															},
															"sink": {
																"name": "impacted_business_units",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['u_number_of_impacted_business_units']"
															},
															"sink": {
																"name": "u_number_of_impacted_business_units",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['out_of_scope']"
															},
															"sink": {
																"name": "out_of_scope",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['assumptions']"
															},
															"sink": {
																"name": "assumptions",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['task_effective_number']"
															},
															"sink": {
																"name": "task_effective_number",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['u_goal']"
															},
															"sink": {
																"name": "u_goal",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['sys_updated_by']"
															},
															"sink": {
																"name": "sys_updated_by",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['opened_by']"
															},
															"sink": {
																"name": "opened_by_link",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['sys_domain']"
															},
															"sink": {
																"name": "sys_domain",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['project_manager']"
															},
															"sink": {
																"name": "project_manager",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['investment_class']"
															},
															"sink": {
																"name": "investment_class",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['resource_planned_cost']"
															},
															"sink": {
																"name": "resource_planned_cost",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['orig_sys_id']"
															},
															"sink": {
																"name": "orig_sys_id",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['level']"
															},
															"sink": {
																"name": "level",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['business_service']"
															},
															"sink": {
																"name": "business_service",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['relation_applied']"
															},
															"sink": {
																"name": "relation_applied",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['u_tracking_follow_up']"
															},
															"sink": {
																"name": "u_tracking_follow_up",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['expected_start']"
															},
															"sink": {
																"name": "expected_start",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['actual_benefits']"
															},
															"sink": {
																"name": "actual_benefits",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['u_dependencies']"
															},
															"sink": {
																"name": "u_dependencies",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['opened_at']"
															},
															"sink": {
																"name": "opened_at",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['primary_program']"
															},
															"sink": {
																"name": "primary_program",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['resources_from_resource_plan']"
															},
															"sink": {
																"name": "resources_from_resource_plan",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['task']"
															},
															"sink": {
																"name": "task",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['u_estimated_hours']"
															},
															"sink": {
																"name": "u_estimated_hours",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['run_calc_brs']"
															},
															"sink": {
																"name": "run_calc_brs",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['irr_value']"
															},
															"sink": {
																"name": "irr_value",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['time_card_at_top_task']"
															},
															"sink": {
																"name": "time_card_at_top_task",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['orig_top_task_id']"
															},
															"sink": {
																"name": "orig_top_task_id",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['software_model']"
															},
															"sink": {
																"name": "software_model",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['business_case']"
															},
															"sink": {
																"name": "business_case",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['calendar_duration']"
															},
															"sink": {
																"name": "calendar_duration",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['end_date_derived_from']"
															},
															"sink": {
																"name": "end_date_derived_from",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['roi']"
															},
															"sink": {
																"name": "roi",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['close_notes']"
															},
															"sink": {
																"name": "close_notes",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['contact_type']"
															},
															"sink": {
																"name": "contact_type",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['department']"
															},
															"sink": {
																"name": "department",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['activity_due']"
															},
															"sink": {
																"name": "activity_due",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['approved_end_date']"
															},
															"sink": {
																"name": "approved_end_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['u_current_conditions']"
															},
															"sink": {
																"name": "u_current_conditions",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['primary_portfolio']"
															},
															"sink": {
																"name": "primary_portfolio",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['u_external_reference']"
															},
															"sink": {
																"name": "u_external_reference",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['comments']"
															},
															"sink": {
																"name": "comments",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['cost']"
															},
															"sink": {
																"name": "cost",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['due_date']"
															},
															"sink": {
																"name": "due_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['sys_mod_count']"
															},
															"sink": {
																"name": "sys_mod_count",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['score_size']"
															},
															"sink": {
																"name": "score_size",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['opex_cost']"
															},
															"sink": {
																"name": "opex_cost",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['time_zone']"
															},
															"sink": {
																"name": "time_zone",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['barriers']"
															},
															"sink": {
																"name": "barriers",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['milestone']"
															},
															"sink": {
																"name": "milestone",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['value']"
															},
															"sink": {
																"name": "value",
																"type": "String"
															}
														}
													],
													"collectionReference": "$['result']",
													"mapComplexValuesToString": true
												}
											},
											"inputs": [
												{
													"referenceName": "ds_datalake_json",
													"type": "DatasetReference",
													"parameters": {
														"Filesystem": "raw",
														"FolderPath": {
															"value": "@pipeline().parameters.sink_entity_folder_path",
															"type": "Expression"
														},
														"FileName": {
															"value": "@replace(pipeline().parameters.sink_entity_file_name, '.parquet', '.json')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "ds_datalake",
													"type": "DatasetReference",
													"parameters": {
														"Filesystem": "raw",
														"FolderPath": {
															"value": "@pipeline().parameters.sink_entity_folder_path",
															"type": "Expression"
														},
														"FileName": {
															"value": "@pipeline().parameters.sink_entity_file_name",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								},
								{
									"value": "issue",
									"activities": [
										{
											"name": "Copy - Source To Raw Parquet 132",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "JsonSource",
													"storeSettings": {
														"type": "AzureBlobFSReadSettings",
														"recursive": true,
														"enablePartitionDiscovery": false
													},
													"formatSettings": {
														"type": "JsonReadSettings"
													}
												},
												"sink": {
													"type": "ParquetSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "ParquetWriteSettings"
													}
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"mappings": [
														{
															"source": {
																"path": "['u_estimated_start']"
															},
															"sink": {
																"name": "u_estimated_start",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['parent']"
															},
															"sink": {
																"name": "parent",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['made_sla']"
															},
															"sink": {
																"name": "made_sla",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['watch_list']"
															},
															"sink": {
																"name": "watch_list",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['upon_reject']"
															},
															"sink": {
																"name": "upon_reject",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['sys_updated_on']"
															},
															"sink": {
																"name": "sys_updated_on",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['task_effective_number']"
															},
															"sink": {
																"name": "task_effective_number",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['approval_history']"
															},
															"sink": {
																"name": "approval_history",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['skills']"
															},
															"sink": {
																"name": "skills",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['number']"
															},
															"sink": {
																"name": "number",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['top_program']"
															},
															"sink": {
																"name": "top_program",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['sys_updated_by']"
															},
															"sink": {
																"name": "sys_updated_by",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['opened_by']"
															},
															"sink": {
																"name": "opened_by",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['user_input']"
															},
															"sink": {
																"name": "user_input",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['sys_created_on']"
															},
															"sink": {
																"name": "sys_created_on",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['sys_domain']"
															},
															"sink": {
																"name": "sys_domain",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['state']"
															},
															"sink": {
																"name": "state",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['route_reason']"
															},
															"sink": {
																"name": "route_reason",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['sys_created_by']"
															},
															"sink": {
																"name": "sys_created_by",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['knowledge']"
															},
															"sink": {
																"name": "knowledge",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['order']"
															},
															"sink": {
																"name": "order",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['closed_at']"
															},
															"sink": {
																"name": "closed_at",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['cmdb_ci']"
															},
															"sink": {
																"name": "cmdb_ci",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['delivery_plan']"
															},
															"sink": {
																"name": "delivery_plan",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['impact']"
															},
															"sink": {
																"name": "impact",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['active']"
															},
															"sink": {
																"name": "active",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['work_notes_list']"
															},
															"sink": {
																"name": "work_notes_list",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['business_service']"
															},
															"sink": {
																"name": "business_service",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['u_estimated_end']"
															},
															"sink": {
																"name": "u_estimated_end",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['u_vendor']"
															},
															"sink": {
																"name": "u_vendor",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['priority']"
															},
															"sink": {
																"name": "priority",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['sys_domain_path']"
															},
															"sink": {
																"name": "sys_domain_path",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['time_worked']"
															},
															"sink": {
																"name": "time_worked",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['expected_start']"
															},
															"sink": {
																"name": "expected_start",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['opened_at']"
															},
															"sink": {
																"name": "opened_at",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['business_duration']"
															},
															"sink": {
																"name": "business_duration",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['group_list']"
															},
															"sink": {
																"name": "group_list",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['show_on_status_report']"
															},
															"sink": {
																"name": "show_on_status_report",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['work_end']"
															},
															"sink": {
																"name": "work_end",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['estimated_cost']"
															},
															"sink": {
																"name": "estimated_cost",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['approval_set']"
															},
															"sink": {
																"name": "approval_set",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['u_estimated_hours']"
															},
															"sink": {
																"name": "u_estimated_hours",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['work_notes']"
															},
															"sink": {
																"name": "work_notes",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['universal_request']"
															},
															"sink": {
																"name": "universal_request",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['short_description']"
															},
															"sink": {
																"name": "short_description",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['correlation_display']"
															},
															"sink": {
																"name": "correlation_display",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['delivery_task']"
															},
															"sink": {
																"name": "delivery_task",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['work_start']"
															},
															"sink": {
																"name": "work_start",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['assignment_group']"
															},
															"sink": {
																"name": "assignment_group",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['top_task']"
															},
															"sink": {
																"name": "top_task",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['additional_assignee_list']"
															},
															"sink": {
																"name": "additional_assignee_list",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['description']"
															},
															"sink": {
																"name": "description",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['calendar_duration']"
															},
															"sink": {
																"name": "calendar_duration",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['close_notes']"
															},
															"sink": {
																"name": "close_notes",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['service_offering']"
															},
															"sink": {
																"name": "service_offering",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['sys_class_name']"
															},
															"sink": {
																"name": "sys_class_name",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['closed_by']"
															},
															"sink": {
																"name": "closed_by",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['follow_up']"
															},
															"sink": {
																"name": "follow_up",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['top_portfolio']"
															},
															"sink": {
																"name": "top_portfolio",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['sys_id']"
															},
															"sink": {
																"name": "sys_id",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['contact_type']"
															},
															"sink": {
																"name": "contact_type",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['urgency']"
															},
															"sink": {
																"name": "urgency",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['original_parent']"
															},
															"sink": {
																"name": "original_parent",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['company']"
															},
															"sink": {
																"name": "company",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['reassignment_count']"
															},
															"sink": {
																"name": "reassignment_count",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['activity_due']"
															},
															"sink": {
																"name": "activity_due",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['assigned_to']"
															},
															"sink": {
																"name": "assigned_to",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['u_actual_hours']"
															},
															"sink": {
																"name": "u_actual_hours",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['comments']"
															},
															"sink": {
																"name": "comments",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['approval']"
															},
															"sink": {
																"name": "approval",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['sla_due']"
															},
															"sink": {
																"name": "sla_due",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['comments_and_work_notes']"
															},
															"sink": {
																"name": "comments_and_work_notes",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['due_date']"
															},
															"sink": {
																"name": "due_date",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['sys_mod_count']"
															},
															"sink": {
																"name": "sys_mod_count",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['sys_tags']"
															},
															"sink": {
																"name": "sys_tags",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['escalation']"
															},
															"sink": {
																"name": "escalation",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['upon_approval']"
															},
															"sink": {
																"name": "upon_approval",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['correlation_id']"
															},
															"sink": {
																"name": "correlation_id",
																"type": "String"
															}
														},
														{
															"source": {
																"path": "['location']"
															},
															"sink": {
																"name": "location",
																"type": "String"
															}
														}
													],
													"collectionReference": "$['result']",
													"mapComplexValuesToString": true
												}
											},
											"inputs": [
												{
													"referenceName": "ds_datalake_json",
													"type": "DatasetReference",
													"parameters": {
														"Filesystem": "raw",
														"FolderPath": {
															"value": "@pipeline().parameters.sink_entity_folder_path",
															"type": "Expression"
														},
														"FileName": {
															"value": "@replace(pipeline().parameters.sink_entity_file_name, '.parquet', '.json')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "ds_datalake",
													"type": "DatasetReference",
													"parameters": {
														"Filesystem": "raw",
														"FolderPath": {
															"value": "@pipeline().parameters.sink_entity_folder_path",
															"type": "Expression"
														},
														"FileName": {
															"value": "@pipeline().parameters.sink_entity_file_name",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								},
								{
									"value": "pm_portfolio",
									"activities": [
										{
											"name": "Copy - Source To Raw Parquet 133",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "JsonSource",
													"storeSettings": {
														"type": "AzureBlobFSReadSettings",
														"recursive": true,
														"enablePartitionDiscovery": false
													},
													"formatSettings": {
														"type": "JsonReadSettings"
													}
												},
												"sink": {
													"type": "ParquetSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "ParquetWriteSettings"
													}
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"mappings": [
														{
															"source": {
																"path": "['portfolio_planning']"
															},
															"sink": {
																"name": "portfolio_planning",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_mod_count']"
															},
															"sink": {
																"name": "sys_mod_count",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['active']"
															},
															"sink": {
																"name": "active",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['description']"
															},
															"sink": {
																"name": "description",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['portfolio_manager']"
															},
															"sink": {
																"name": "portfolio_manager",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_updated_on']"
															},
															"sink": {
																"name": "sys_updated_on",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_tags']"
															},
															"sink": {
																"name": "sys_tags",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['business_unit']"
															},
															"sink": {
																"name": "business_unit",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_class_name']"
															},
															"sink": {
																"name": "sys_class_name",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_id']"
															},
															"sink": {
																"name": "sys_id",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_updated_by']"
															},
															"sink": {
																"name": "sys_updated_by",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_created_on']"
															},
															"sink": {
																"name": "sys_created_on",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_domain']"
															},
															"sink": {
																"name": "sys_domain",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['name']"
															},
															"sink": {
																"name": "name",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['state']"
															},
															"sink": {
																"name": "state",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['category']"
															},
															"sink": {
																"name": "category",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['department']"
															},
															"sink": {
																"name": "department",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_created_by']"
															},
															"sink": {
																"name": "sys_created_by",
																"type": "string"
															}
														}
													],
													"collectionReference": "$['result']",
													"mapComplexValuesToString": true
												}
											},
											"inputs": [
												{
													"referenceName": "ds_datalake_json",
													"type": "DatasetReference",
													"parameters": {
														"Filesystem": "raw",
														"FolderPath": {
															"value": "@pipeline().parameters.sink_entity_folder_path",
															"type": "Expression"
														},
														"FileName": {
															"value": "@replace(pipeline().parameters.sink_entity_file_name, '.parquet', '.json')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "ds_datalake",
													"type": "DatasetReference",
													"parameters": {
														"Filesystem": "raw",
														"FolderPath": {
															"value": "@pipeline().parameters.sink_entity_folder_path",
															"type": "Expression"
														},
														"FileName": {
															"value": "@pipeline().parameters.sink_entity_file_name",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								},
								{
									"value": "pm_project_task",
									"activities": [
										{
											"name": "Copy - Source To Raw Parquet 134",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "JsonSource",
													"storeSettings": {
														"type": "AzureBlobFSReadSettings",
														"recursive": true,
														"enablePartitionDiscovery": false
													},
													"formatSettings": {
														"type": "JsonReadSettings"
													}
												},
												"sink": {
													"type": "ParquetSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "ParquetWriteSettings"
													}
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"mappings": [
														{
															"source": {
																"path": "['u_estimated_start']"
															},
															"sink": {
																"name": "u_estimated_start",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['parent']"
															},
															"sink": {
																"name": "parent",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['shadow']"
															},
															"sink": {
																"name": "shadow",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['watch_list']"
															},
															"sink": {
																"name": "watch_list",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['phase_type']"
															},
															"sink": {
																"name": "phase_type",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['wbs']"
															},
															"sink": {
																"name": "wbs",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['upon_reject']"
															},
															"sink": {
																"name": "upon_reject",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_updated_on']"
															},
															"sink": {
																"name": "sys_updated_on",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['approval_history']"
															},
															"sink": {
																"name": "approval_history",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['rollup']"
															},
															"sink": {
																"name": "rollup",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['skills']"
															},
															"sink": {
																"name": "skills",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['number']"
															},
															"sink": {
																"name": "number",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['test_plan']"
															},
															"sink": {
																"name": "test_plan",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['top_program']"
															},
															"sink": {
																"name": "top_program",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['schedule_start_date']"
															},
															"sink": {
																"name": "schedule_start_date",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['capex_cost']"
															},
															"sink": {
																"name": "capex_cost",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['state']"
															},
															"sink": {
																"name": "state",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_created_by']"
															},
															"sink": {
																"name": "sys_created_by",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['knowledge']"
															},
															"sink": {
																"name": "knowledge",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['order']"
															},
															"sink": {
																"name": "order",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['work_duration']"
															},
															"sink": {
																"name": "work_duration",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['budget_cost']"
															},
															"sink": {
																"name": "budget_cost",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['cmdb_ci']"
															},
															"sink": {
																"name": "cmdb_ci",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['delivery_plan']"
															},
															"sink": {
																"name": "delivery_plan",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['dependency']"
															},
															"sink": {
																"name": "dependency",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['impact']"
															},
															"sink": {
																"name": "impact",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['key_milestone']"
															},
															"sink": {
																"name": "key_milestone",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['remaining_effort']"
															},
															"sink": {
																"name": "remaining_effort",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['scrum_team']"
															},
															"sink": {
																"name": "scrum_team",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['active']"
															},
															"sink": {
																"name": "active",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['work_notes_list']"
															},
															"sink": {
																"name": "work_notes_list",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['u_vendor']"
															},
															"sink": {
																"name": "u_vendor",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['priority']"
															},
															"sink": {
																"name": "priority",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_domain_path']"
															},
															"sink": {
																"name": "sys_domain_path",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['version']"
															},
															"sink": {
																"name": "version",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['business_duration']"
															},
															"sink": {
																"name": "business_duration",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['group_list']"
															},
															"sink": {
																"name": "group_list",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['override_status']"
															},
															"sink": {
																"name": "override_status",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['approval_set']"
															},
															"sink": {
																"name": "approval_set",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['critical_path']"
															},
															"sink": {
																"name": "critical_path",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['status']"
															},
															"sink": {
																"name": "status",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['universal_request']"
															},
															"sink": {
																"name": "universal_request",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['end_date']"
															},
															"sink": {
																"name": "end_date",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['short_description']"
															},
															"sink": {
																"name": "short_description",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['correlation_display']"
															},
															"sink": {
																"name": "correlation_display",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['delivery_task']"
															},
															"sink": {
																"name": "delivery_task",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['work_start']"
															},
															"sink": {
																"name": "work_start",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['top_task']"
															},
															"sink": {
																"name": "top_task",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['time_constraint']"
															},
															"sink": {
																"name": "time_constraint",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['start_sprint']"
															},
															"sink": {
																"name": "start_sprint",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['additional_assignee_list']"
															},
															"sink": {
																"name": "additional_assignee_list",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['service_offering']"
															},
															"sink": {
																"name": "service_offering",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_class_name']"
															},
															"sink": {
																"name": "sys_class_name",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['closed_by']"
															},
															"sink": {
																"name": "closed_by",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['follow_up']"
															},
															"sink": {
																"name": "follow_up",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['top_portfolio']"
															},
															"sink": {
																"name": "top_portfolio",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['calculation_type']"
															},
															"sink": {
																"name": "calculation_type",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['reassignment_count']"
															},
															"sink": {
																"name": "reassignment_count",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['schedule_end_date']"
															},
															"sink": {
																"name": "schedule_end_date",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['assigned_to']"
															},
															"sink": {
																"name": "assigned_to",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['start_date']"
															},
															"sink": {
																"name": "start_date",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['u_actual_hours']"
															},
															"sink": {
																"name": "u_actual_hours",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['mpp_task_id']"
															},
															"sink": {
																"name": "mpp_task_id",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sub_tree_root']"
															},
															"sink": {
																"name": "sub_tree_root",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sla_due']"
															},
															"sink": {
																"name": "sla_due",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['comments_and_work_notes']"
															},
															"sink": {
																"name": "comments_and_work_notes",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['remaining_duration']"
															},
															"sink": {
																"name": "remaining_duration",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['resource_allocated_cost']"
															},
															"sink": {
																"name": "resource_allocated_cost",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['has_conflict']"
															},
															"sink": {
																"name": "has_conflict",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['allow_dates_outside_schedule']"
															},
															"sink": {
																"name": "allow_dates_outside_schedule",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['escalation']"
															},
															"sink": {
																"name": "escalation",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['upon_approval']"
															},
															"sink": {
																"name": "upon_approval",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['correlation_id']"
															},
															"sink": {
																"name": "correlation_id",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['made_sla']"
															},
															"sink": {
																"name": "made_sla",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['project']"
															},
															"sink": {
																"name": "project",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['wbs_order']"
															},
															"sink": {
																"name": "wbs_order",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['u_project_task_type']"
															},
															"sink": {
																"name": "u_project_task_type",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['task_effective_number']"
															},
															"sink": {
																"name": "task_effective_number",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['work_effort']"
															},
															"sink": {
																"name": "work_effort",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_updated_by']"
															},
															"sink": {
																"name": "sys_updated_by",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['opened_by']"
															},
															"sink": {
																"name": "opened_by",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['user_input']"
															},
															"sink": {
																"name": "user_input",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_created_on']"
															},
															"sink": {
																"name": "sys_created_on",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_domain']"
															},
															"sink": {
																"name": "sys_domain",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['end_sprint']"
															},
															"sink": {
																"name": "end_sprint",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['resource_planned_cost']"
															},
															"sink": {
																"name": "resource_planned_cost",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['route_reason']"
															},
															"sink": {
																"name": "route_reason",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['start_date_derived_from']"
															},
															"sink": {
																"name": "start_date_derived_from",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['orig_sys_id']"
															},
															"sink": {
																"name": "orig_sys_id",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['closed_at']"
															},
															"sink": {
																"name": "closed_at",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['level']"
															},
															"sink": {
																"name": "level",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['business_service']"
															},
															"sink": {
																"name": "business_service",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['relation_applied']"
															},
															"sink": {
																"name": "relation_applied",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['u_estimated_end']"
															},
															"sink": {
																"name": "u_estimated_end",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['time_worked']"
															},
															"sink": {
																"name": "time_worked",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['expected_start']"
															},
															"sink": {
																"name": "expected_start",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['actual_benefits']"
															},
															"sink": {
																"name": "actual_benefits",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['opened_at']"
															},
															"sink": {
																"name": "opened_at",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['agile_rollup_dates']"
															},
															"sink": {
																"name": "agile_rollup_dates",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['task']"
															},
															"sink": {
																"name": "task",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['work_end']"
															},
															"sink": {
																"name": "work_end",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['u_estimated_hours']"
															},
															"sink": {
																"name": "u_estimated_hours",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['run_calc_brs']"
															},
															"sink": {
																"name": "run_calc_brs",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['work_notes']"
															},
															"sink": {
																"name": "work_notes",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['benefits']"
															},
															"sink": {
																"name": "benefits",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['time_card_at_top_task']"
															},
															"sink": {
																"name": "time_card_at_top_task",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['work_cost']"
															},
															"sink": {
																"name": "work_cost",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['assignment_group']"
															},
															"sink": {
																"name": "assignment_group",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['orig_top_task_id']"
															},
															"sink": {
																"name": "orig_top_task_id",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['software_model']"
															},
															"sink": {
																"name": "software_model",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['link']"
															},
															"sink": {
																"name": "link",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['description']"
															},
															"sink": {
																"name": "description",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['effort']"
															},
															"sink": {
																"name": "effort",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['calendar_duration']"
															},
															"sink": {
																"name": "calendar_duration",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['end_date_derived_from']"
															},
															"sink": {
																"name": "end_date_derived_from",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['close_notes']"
															},
															"sink": {
																"name": "close_notes",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['duration']"
															},
															"sink": {
																"name": "duration",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_id']"
															},
															"sink": {
																"name": "sys_id",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['contact_type']"
															},
															"sink": {
																"name": "contact_type",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['urgency']"
															},
															"sink": {
																"name": "urgency",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['constraint_date']"
															},
															"sink": {
																"name": "constraint_date",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['company']"
															},
															"sink": {
																"name": "company",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['end']"
															},
															"sink": {
																"name": "end",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['activity_due']"
															},
															"sink": {
																"name": "activity_due",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['comments']"
															},
															"sink": {
																"name": "comments",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['cost']"
															},
															"sink": {
																"name": "cost",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['approval']"
															},
															"sink": {
																"name": "approval",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['due_date']"
															},
															"sink": {
																"name": "due_date",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['start']"
															},
															"sink": {
																"name": "start",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_mod_count']"
															},
															"sink": {
																"name": "sys_mod_count",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['model_id']"
															},
															"sink": {
																"name": "model_id",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['opex_cost']"
															},
															"sink": {
																"name": "opex_cost",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_tags']"
															},
															"sink": {
																"name": "sys_tags",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['time_zone']"
															},
															"sink": {
																"name": "time_zone",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['html_description']"
															},
															"sink": {
																"name": "html_description",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['percent_complete']"
															},
															"sink": {
																"name": "percent_complete",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['milestone']"
															},
															"sink": {
																"name": "milestone",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['location']"
															},
															"sink": {
																"name": "location",
																"type": "string"
															}
														}
													],
													"collectionReference": "$['result']",
													"mapComplexValuesToString": true
												}
											},
											"inputs": [
												{
													"referenceName": "ds_datalake_json",
													"type": "DatasetReference",
													"parameters": {
														"Filesystem": "raw",
														"FolderPath": {
															"value": "@pipeline().parameters.sink_entity_folder_path",
															"type": "Expression"
														},
														"FileName": {
															"value": "@replace(pipeline().parameters.sink_entity_file_name, '.parquet', '.json')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "ds_datalake",
													"type": "DatasetReference",
													"parameters": {
														"Filesystem": "raw",
														"FolderPath": {
															"value": "@pipeline().parameters.sink_entity_folder_path",
															"type": "Expression"
														},
														"FileName": {
															"value": "@pipeline().parameters.sink_entity_file_name",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								},
								{
									"value": "project_status",
									"activities": [
										{
											"name": "Copy - Source To Raw Parquet 135",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "JsonSource",
													"storeSettings": {
														"type": "AzureBlobFSReadSettings",
														"recursive": true,
														"enablePartitionDiscovery": false
													},
													"formatSettings": {
														"type": "JsonReadSettings"
													}
												},
												"sink": {
													"type": "ParquetSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "ParquetWriteSettings"
													}
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"mappings": [
														{
															"source": {
																"path": "['as_on']"
															},
															"sink": {
																"name": "as_on",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['end_date']"
															},
															"sink": {
																"name": "end_date",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['work_cost']"
															},
															"sink": {
																"name": "work_cost",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['work_start']"
															},
															"sink": {
																"name": "work_start",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['key_activities_next_week']"
															},
															"sink": {
																"name": "key_activities_next_week",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['project']"
															},
															"sink": {
																"name": "project",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_updated_on']"
															},
															"sink": {
																"name": "sys_updated_on",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['forecast_cost']"
															},
															"sink": {
																"name": "forecast_cost",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['resources_comments']"
															},
															"sink": {
																"name": "resources_comments",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_class_name']"
															},
															"sink": {
																"name": "sys_class_name",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['number']"
															},
															"sink": {
																"name": "number",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_id']"
															},
															"sink": {
																"name": "sys_id",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_updated_by']"
															},
															"sink": {
																"name": "sys_updated_by",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['cost_comments']"
															},
															"sink": {
																"name": "cost_comments",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['constraint_date']"
															},
															"sink": {
																"name": "constraint_date",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_created_on']"
															},
															"sink": {
																"name": "sys_created_on",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['executive_summary']"
															},
															"sink": {
																"name": "executive_summary",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['scope']"
															},
															"sink": {
																"name": "scope",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_domain']"
															},
															"sink": {
																"name": "sys_domain",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['state']"
															},
															"sink": {
																"name": "state",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['approved_start_date']"
															},
															"sink": {
																"name": "approved_start_date",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['overall_health']"
															},
															"sink": {
																"name": "overall_health",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['approved_end_date']"
															},
															"sink": {
																"name": "approved_end_date",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_created_by']"
															},
															"sink": {
																"name": "sys_created_by",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['budget']"
															},
															"sink": {
																"name": "budget",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['start_date']"
															},
															"sink": {
																"name": "start_date",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['phase']"
															},
															"sink": {
																"name": "phase",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['comments']"
															},
															"sink": {
																"name": "comments",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['cost']"
															},
															"sink": {
																"name": "cost",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['budget_cost']"
															},
															"sink": {
																"name": "budget_cost",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['scope_comments']"
															},
															"sink": {
																"name": "scope_comments",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_mod_count']"
															},
															"sink": {
																"name": "sys_mod_count",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['resources']"
															},
															"sink": {
																"name": "resources",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['budget_comments']"
															},
															"sink": {
																"name": "budget_comments",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_tags']"
															},
															"sink": {
																"name": "sys_tags",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['percent_complete']"
															},
															"sink": {
																"name": "percent_complete",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['achievements_last_week']"
															},
															"sink": {
																"name": "achievements_last_week",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['schedule_comments']"
															},
															"sink": {
																"name": "schedule_comments",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['schedule']"
															},
															"sink": {
																"name": "schedule",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['work_end']"
															},
															"sink": {
																"name": "work_end",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['u_latest_status_report']"
															},
															"sink": {
																"name": "u_latest_status_report",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['planned_cost']"
															},
															"sink": {
																"name": "planned_cost",
																"type": "string"
															}
														}
													],
													"collectionReference": "$['result']",
													"mapComplexValuesToString": true
												}
											},
											"inputs": [
												{
													"referenceName": "ds_datalake_json",
													"type": "DatasetReference",
													"parameters": {
														"Filesystem": "raw",
														"FolderPath": {
															"value": "@pipeline().parameters.sink_entity_folder_path",
															"type": "Expression"
														},
														"FileName": {
															"value": "@replace(pipeline().parameters.sink_entity_file_name, '.parquet', '.json')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "ds_datalake",
													"type": "DatasetReference",
													"parameters": {
														"Filesystem": "raw",
														"FolderPath": {
															"value": "@pipeline().parameters.sink_entity_folder_path",
															"type": "Expression"
														},
														"FileName": {
															"value": "@pipeline().parameters.sink_entity_file_name",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								},
								{
									"value": "risk",
									"activities": [
										{
											"name": "Copy - Source To Raw Parquet 136",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "JsonSource",
													"storeSettings": {
														"type": "AzureBlobFSReadSettings",
														"recursive": true,
														"enablePartitionDiscovery": false
													},
													"formatSettings": {
														"type": "JsonReadSettings"
													}
												},
												"sink": {
													"type": "ParquetSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "ParquetWriteSettings"
													}
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"mappings": [
														{
															"source": {
																"path": "['short_description']"
															},
															"sink": {
																"name": "short_description",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['work_cost']"
															},
															"sink": {
																"name": "work_cost",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['top_task']"
															},
															"sink": {
																"name": "top_task",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['description']"
															},
															"sink": {
																"name": "description",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_updated_on']"
															},
															"sink": {
																"name": "sys_updated_on",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['top_portfolio']"
															},
															"sink": {
																"name": "top_portfolio",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['number']"
															},
															"sink": {
																"name": "number",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_id']"
															},
															"sink": {
																"name": "sys_id",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['top_program']"
															},
															"sink": {
																"name": "top_program",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_updated_by']"
															},
															"sink": {
																"name": "sys_updated_by",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['risk_rank']"
															},
															"sink": {
																"name": "risk_rank",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_created_on']"
															},
															"sink": {
																"name": "sys_created_on",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_domain']"
															},
															"sink": {
																"name": "sys_domain",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['risk_owner']"
															},
															"sink": {
																"name": "risk_owner",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['state']"
															},
															"sink": {
																"name": "state",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_created_by']"
															},
															"sink": {
																"name": "sys_created_by",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['assigned_to']"
															},
															"sink": {
																"name": "assigned_to",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['mitigation']"
															},
															"sink": {
																"name": "mitigation",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['cost']"
															},
															"sink": {
																"name": "cost",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['original_task']"
															},
															"sink": {
																"name": "original_task",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['probability']"
															},
															"sink": {
																"name": "probability",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['impact']"
															},
															"sink": {
																"name": "impact",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['due_date']"
															},
															"sink": {
																"name": "due_date",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_mod_count']"
															},
															"sink": {
																"name": "sys_mod_count",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['u_impact']"
															},
															"sink": {
																"name": "u_impact",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_tags']"
															},
															"sink": {
																"name": "sys_tags",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['risk_state']"
															},
															"sink": {
																"name": "risk_state",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['risk']"
															},
															"sink": {
																"name": "risk",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['task']"
															},
															"sink": {
																"name": "task",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['show_on_status_report']"
															},
															"sink": {
																"name": "show_on_status_report",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['u_risk_score']"
															},
															"sink": {
																"name": "u_risk_score",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['work_notes']"
															},
															"sink": {
																"name": "work_notes",
																"type": "string"
															}
														}
													],
													"collectionReference": "$['result']",
													"mapComplexValuesToString": true
												}
											},
											"inputs": [
												{
													"referenceName": "ds_datalake_json",
													"type": "DatasetReference",
													"parameters": {
														"Filesystem": "raw",
														"FolderPath": {
															"value": "@pipeline().parameters.sink_entity_folder_path",
															"type": "Expression"
														},
														"FileName": {
															"value": "@replace(pipeline().parameters.sink_entity_file_name, '.parquet', '.json')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "ds_datalake",
													"type": "DatasetReference",
													"parameters": {
														"Filesystem": "raw",
														"FolderPath": {
															"value": "@pipeline().parameters.sink_entity_folder_path",
															"type": "Expression"
														},
														"FileName": {
															"value": "@pipeline().parameters.sink_entity_file_name",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								},
								{
									"value": "dmn_demand",
									"activities": [
										{
											"name": "Copy - Source To Raw Parquet 137",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "0.12:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "JsonSource",
													"storeSettings": {
														"type": "AzureBlobFSReadSettings",
														"recursive": true,
														"enablePartitionDiscovery": false
													},
													"formatSettings": {
														"type": "JsonReadSettings"
													}
												},
												"sink": {
													"type": "ParquetSink",
													"storeSettings": {
														"type": "AzureBlobFSWriteSettings"
													},
													"formatSettings": {
														"type": "ParquetWriteSettings"
													}
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"mappings": [
														{
															"source": {
																"path": "['u_estimated_start']"
															},
															"sink": {
																"name": "u_estimated_start",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['parent']"
															},
															"sink": {
																"name": "parent",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['close_demand']"
															},
															"sink": {
																"name": "close_demand",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['watch_list']"
															},
															"sink": {
																"name": "watch_list",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['other_costs']"
															},
															"sink": {
																"name": "other_costs",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['upon_reject']"
															},
															"sink": {
																"name": "upon_reject",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_updated_on']"
															},
															"sink": {
																"name": "sys_updated_on",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['type']"
															},
															"sink": {
																"name": "type",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['discount_rate']"
															},
															"sink": {
																"name": "discount_rate",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['approval_history']"
															},
															"sink": {
																"name": "approval_history",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['skills']"
															},
															"sink": {
																"name": "skills",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['number']"
															},
															"sink": {
																"name": "number",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['score']"
															},
															"sink": {
																"name": "score",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['defect']"
															},
															"sink": {
																"name": "defect",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['related_records']"
															},
															"sink": {
																"name": "related_records",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['collaborators']"
															},
															"sink": {
																"name": "collaborators",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['labor_costs']"
															},
															"sink": {
																"name": "labor_costs",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['state']"
															},
															"sink": {
																"name": "state",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_created_by']"
															},
															"sink": {
																"name": "sys_created_by",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['expected_roi']"
															},
															"sink": {
																"name": "expected_roi",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['goals']"
															},
															"sink": {
																"name": "goals",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['knowledge']"
															},
															"sink": {
																"name": "knowledge",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['order']"
															},
															"sink": {
																"name": "order",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['goal']"
															},
															"sink": {
																"name": "goal",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['cmdb_ci']"
															},
															"sink": {
																"name": "cmdb_ci",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['delivery_plan']"
															},
															"sink": {
																"name": "delivery_plan",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['impact']"
															},
															"sink": {
																"name": "impact",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['active']"
															},
															"sink": {
																"name": "active",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['work_notes_list']"
															},
															"sink": {
																"name": "work_notes_list",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['u_vendor']"
															},
															"sink": {
																"name": "u_vendor",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['priority']"
															},
															"sink": {
																"name": "priority",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_domain_path']"
															},
															"sink": {
																"name": "sys_domain_path",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['business_unit']"
															},
															"sink": {
																"name": "business_unit",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['demand']"
															},
															"sink": {
																"name": "demand",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['investment_type']"
															},
															"sink": {
																"name": "investment_type",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['business_duration']"
															},
															"sink": {
																"name": "business_duration",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['group_list']"
															},
															"sink": {
																"name": "group_list",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['requested_by']"
															},
															"sink": {
																"name": "requested_by",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['size']"
															},
															"sink": {
																"name": "size",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['score_value']"
															},
															"sink": {
																"name": "score_value",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['approval_set']"
															},
															"sink": {
																"name": "approval_set",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['financial_return']"
															},
															"sink": {
																"name": "financial_return",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['total_costs']"
															},
															"sink": {
																"name": "total_costs",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['score_cost']"
															},
															"sink": {
																"name": "score_cost",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['score_risk']"
															},
															"sink": {
																"name": "score_risk",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['universal_request']"
															},
															"sink": {
																"name": "universal_request",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['business_capabilities']"
															},
															"sink": {
																"name": "business_capabilities",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['short_description']"
															},
															"sink": {
																"name": "short_description",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['correlation_display']"
															},
															"sink": {
																"name": "correlation_display",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['delivery_task']"
															},
															"sink": {
																"name": "delivery_task",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['work_start']"
															},
															"sink": {
																"name": "work_start",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['additional_assignee_list']"
															},
															"sink": {
																"name": "additional_assignee_list",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['service_offering']"
															},
															"sink": {
																"name": "service_offering",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_class_name']"
															},
															"sink": {
																"name": "sys_class_name",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['closed_by']"
															},
															"sink": {
																"name": "closed_by",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['follow_up']"
															},
															"sink": {
																"name": "follow_up",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['calculation_type']"
															},
															"sink": {
																"name": "calculation_type",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['in_scope']"
															},
															"sink": {
																"name": "in_scope",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['score_strategic_allignment']"
															},
															"sink": {
																"name": "score_strategic_allignment",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['operational_budget']"
															},
															"sink": {
																"name": "operational_budget",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['reassignment_count']"
															},
															"sink": {
																"name": "reassignment_count",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['business_applications']"
															},
															"sink": {
																"name": "business_applications",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['assigned_to']"
															},
															"sink": {
																"name": "assigned_to",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['start_date']"
															},
															"sink": {
																"name": "start_date",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['demand_actual_effort']"
															},
															"sink": {
																"name": "demand_actual_effort",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['u_actual_hours']"
															},
															"sink": {
																"name": "u_actual_hours",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['u_number_of_strategies']"
															},
															"sink": {
																"name": "u_number_of_strategies",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sla_due']"
															},
															"sink": {
																"name": "sla_due",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['change']"
															},
															"sink": {
																"name": "change",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['comments_and_work_notes']"
															},
															"sink": {
																"name": "comments_and_work_notes",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['resource_allocated_cost']"
															},
															"sink": {
																"name": "resource_allocated_cost",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['risk_of_performing']"
															},
															"sink": {
																"name": "risk_of_performing",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['u_business_owner']"
															},
															"sink": {
																"name": "u_business_owner",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['stage']"
															},
															"sink": {
																"name": "stage",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['escalation']"
															},
															"sink": {
																"name": "escalation",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['upon_approval']"
															},
															"sink": {
																"name": "upon_approval",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['demand_actual_cost']"
															},
															"sink": {
																"name": "demand_actual_cost",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['correlation_id']"
															},
															"sink": {
																"name": "correlation_id",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['u_governing_body_single']"
															},
															"sink": {
																"name": "u_governing_body_single",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['impacted_business_units']"
															},
															"sink": {
																"name": "impacted_business_units",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['financial_benefit']"
															},
															"sink": {
																"name": "financial_benefit",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['submitted_date']"
															},
															"sink": {
																"name": "submitted_date",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['u_analysis']"
															},
															"sink": {
																"name": "u_analysis",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['made_sla']"
															},
															"sink": {
																"name": "made_sla",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['scrum_story']"
															},
															"sink": {
																"name": "scrum_story",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['project']"
															},
															"sink": {
																"name": "project",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['strategic_objectives']"
															},
															"sink": {
																"name": "strategic_objectives",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['u_number_of_impacted_business_units']"
															},
															"sink": {
																"name": "u_number_of_impacted_business_units",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['enhancement']"
															},
															"sink": {
																"name": "enhancement",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['out_of_scope']"
															},
															"sink": {
																"name": "out_of_scope",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['assumptions']"
															},
															"sink": {
																"name": "assumptions",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['task_effective_number']"
															},
															"sink": {
																"name": "task_effective_number",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['u_goal']"
															},
															"sink": {
																"name": "u_goal",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['capital_budget']"
															},
															"sink": {
																"name": "capital_budget",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_updated_by']"
															},
															"sink": {
																"name": "sys_updated_by",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['opened_by']"
															},
															"sink": {
																"name": "opened_by",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['portfolio']"
															},
															"sink": {
																"name": "portfolio",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['user_input']"
															},
															"sink": {
																"name": "user_input",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_created_on']"
															},
															"sink": {
																"name": "sys_created_on",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_domain']"
															},
															"sink": {
																"name": "sys_domain",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['u_bubble_score_cost']"
															},
															"sink": {
																"name": "u_bubble_score_cost",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['project_manager']"
															},
															"sink": {
																"name": "project_manager",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['operational_outlay']"
															},
															"sink": {
																"name": "operational_outlay",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['investment_class']"
															},
															"sink": {
																"name": "investment_class",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['expected_risk']"
															},
															"sink": {
																"name": "expected_risk",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['resource_planned_cost']"
															},
															"sink": {
																"name": "resource_planned_cost",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['route_reason']"
															},
															"sink": {
																"name": "route_reason",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['u_bubble_score_risk']"
															},
															"sink": {
																"name": "u_bubble_score_risk",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['closed_at']"
															},
															"sink": {
																"name": "closed_at",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['business_service']"
															},
															"sink": {
																"name": "business_service",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['u_estimated_end']"
															},
															"sink": {
																"name": "u_estimated_end",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['u_tracking_follow_up']"
															},
															"sink": {
																"name": "u_tracking_follow_up",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['u_plan_capacity']"
															},
															"sink": {
																"name": "u_plan_capacity",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['time_worked']"
															},
															"sink": {
																"name": "time_worked",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['expected_start']"
															},
															"sink": {
																"name": "expected_start",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['u_dependencies']"
															},
															"sink": {
																"name": "u_dependencies",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['visited_state']"
															},
															"sink": {
																"name": "visited_state",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['opened_at']"
															},
															"sink": {
																"name": "opened_at",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['primary_program']"
															},
															"sink": {
																"name": "primary_program",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['scrum_epic']"
															},
															"sink": {
																"name": "scrum_epic",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['u_proposal']"
															},
															"sink": {
																"name": "u_proposal",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['npv']"
															},
															"sink": {
																"name": "npv",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['work_end']"
															},
															"sink": {
																"name": "work_end",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['u_estimated_hours']"
															},
															"sink": {
																"name": "u_estimated_hours",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['work_notes']"
															},
															"sink": {
																"name": "work_notes",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['irr']"
															},
															"sink": {
																"name": "irr",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['submitter']"
															},
															"sink": {
																"name": "submitter",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['assignment_group']"
															},
															"sink": {
																"name": "assignment_group",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['idea']"
															},
															"sink": {
																"name": "idea",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['software_model']"
															},
															"sink": {
																"name": "software_model",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['business_case']"
															},
															"sink": {
																"name": "business_case",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['description']"
															},
															"sink": {
																"name": "description",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['calendar_duration']"
															},
															"sink": {
																"name": "calendar_duration",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['risk_of_not_performing']"
															},
															"sink": {
																"name": "risk_of_not_performing",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['close_notes']"
															},
															"sink": {
																"name": "close_notes",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_id']"
															},
															"sink": {
																"name": "sys_id",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['contact_type']"
															},
															"sink": {
																"name": "contact_type",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['urgency']"
															},
															"sink": {
																"name": "urgency",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['company']"
															},
															"sink": {
																"name": "company",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['rate_model']"
															},
															"sink": {
																"name": "rate_model",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['department']"
															},
															"sink": {
																"name": "department",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['approved_start_date']"
															},
															"sink": {
																"name": "approved_start_date",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['activity_due']"
															},
															"sink": {
																"name": "activity_due",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['approved_end_date']"
															},
															"sink": {
																"name": "approved_end_date",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['u_current_conditions']"
															},
															"sink": {
																"name": "u_current_conditions",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['comments']"
															},
															"sink": {
																"name": "comments",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['enablers']"
															},
															"sink": {
																"name": "enablers",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['approval']"
															},
															"sink": {
																"name": "approval",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['capital_outlay']"
															},
															"sink": {
																"name": "capital_outlay",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['due_date']"
															},
															"sink": {
																"name": "due_date",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_mod_count']"
															},
															"sink": {
																"name": "sys_mod_count",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['score_size']"
															},
															"sink": {
																"name": "score_size",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['model_id']"
															},
															"sink": {
																"name": "model_id",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['sys_tags']"
															},
															"sink": {
																"name": "sys_tags",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['u_bubble_score_size']"
															},
															"sink": {
																"name": "u_bubble_score_size",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['barriers']"
															},
															"sink": {
																"name": "barriers",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['location']"
															},
															"sink": {
																"name": "location",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['assessment_required']"
															},
															"sink": {
																"name": "assessment_required",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['demand_manager']"
															},
															"sink": {
																"name": "demand_manager",
																"type": "string"
															}
														},
														{
															"source": {
																"path": "['category']"
															},
															"sink": {
																"name": "category",
																"type": "string"
															}
														}
													],
													"collectionReference": "$['result']",
													"mapComplexValuesToString": true
												}
											},
											"inputs": [
												{
													"referenceName": "ds_datalake_json",
													"type": "DatasetReference",
													"parameters": {
														"Filesystem": "raw",
														"FolderPath": {
															"value": "@pipeline().parameters.sink_entity_folder_path",
															"type": "Expression"
														},
														"FileName": {
															"value": "@replace(pipeline().parameters.sink_entity_file_name, '.parquet', '.json')",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "ds_datalake",
													"type": "DatasetReference",
													"parameters": {
														"Filesystem": "raw",
														"FolderPath": {
															"value": "@pipeline().parameters.sink_entity_folder_path",
															"type": "Expression"
														},
														"FileName": {
															"value": "@pipeline().parameters.sink_entity_file_name",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"source_entity_name": {
						"type": "string"
					},
					"sink_entity_folder_path": {
						"type": "string"
					},
					"sink_entity_file_name": {
						"type": "string"
					},
					"source_sink_mapping": {
						"type": "array"
					},
					"process_run_date": {
						"type": "string"
					},
					"is_incremental": {
						"type": "string",
						"defaultValue": "true"
					}
				},
				"folder": {
					"name": "ELT DWH/10 SourceToRaw"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/ds_source_servicenow_tableapi_rest')]",
				"[concat(variables('workspaceId'), '/datasets/ds_datalake_json')]",
				"[concat(variables('workspaceId'), '/datasets/ds_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/20 RawToStaging')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Lookup - TablesToCopy",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[elt].[spCopyRawToStg]",
								"storedProcedureParameters": {
									"pipeline_run_id": {
										"type": "Guid",
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										}
									},
									"process_run_date": {
										"type": "Datetime",
										"value": {
											"value": "@pipeline().parameters.process_run_date",
											"type": "Expression"
										}
									},
									"use_case_code": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.use_case_code",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sql_mdb_table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach - StagingToRaw",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup - TablesToCopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup - TablesToCopy').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Execute Pipeline 21 RawToStaging",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "21 RawToStaging - Copy Data",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"entity_name": {
												"value": "@item().entity_name",
												"type": "Expression"
											},
											"system_name": {
												"value": "@item().system_name",
												"type": "Expression"
											},
											"source_entity_file_name": {
												"value": "@item().source_entity_file_name",
												"type": "Expression"
											},
											"source_entity_folder_path": {
												"value": "@item().source_entity_folder_path",
												"type": "Expression"
											},
											"source_entity_file_structure": {
												"value": "@item().source_entity_structure",
												"type": "Expression"
											},
											"sink_entity_name": {
												"value": "@item().sink_entity_name",
												"type": "Expression"
											},
											"sink_entity_structure": {
												"value": "@json(item().sink_entity_structure)",
												"type": "Expression"
											},
											"source_sink_mapping": {
												"value": "@json(item().source_sink_mapping)",
												"type": "Expression"
											},
											"process_run_id": {
												"value": "@pipeline().parameters.process_run_id",
												"type": "Expression"
											},
											"process_run_date": {
												"value": "@pipeline().parameters.process_run_date",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"process_run_id": {
						"type": "int"
					},
					"process_run_date": {
						"type": "string"
					},
					"use_case_code": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ELT DWH/20 RawToStaging"
				},
				"annotations": [],
				"lastPublishTime": "2020-10-16T08:33:32Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/ds_sql_mdb_table')]",
				"[concat(variables('workspaceId'), '/pipelines/21 RawToStaging - Copy Data')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/21 RawToStaging - Copy Data')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy Data - Blob to SQL Staging",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "sp Drop and-or Create Table",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "@{concat('TRUNCATE TABLE', ' ', pipeline().parameters.sink_entity_name)}",
									"type": "Expression"
								},
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "ds_datalake",
								"type": "DatasetReference",
								"parameters": {
									"Filesystem": "raw",
									"FolderPath": {
										"value": "@pipeline().parameters.source_entity_folder_path",
										"type": "Expression"
									},
									"FileName": {
										"value": "@pipeline().parameters.source_entity_file_name",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sql_dwh_table",
								"type": "DatasetReference",
								"parameters": {
									"table_name": "@pipeline().parameters.entity_name",
									"structure": {
										"value": "@pipeline().parameters.sink_entity_structure",
										"type": "Expression"
									},
									"schema": {
										"value": "@pipeline().parameters.system_name",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "LU - Create schema script",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[elt].[spCreateSchema]",
								"storedProcedureParameters": {
									"system_name": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.system_name",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sql_mdb_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "sp Create Schema from script",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "LU - Create schema script",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[elt].[spCreateSchema]",
							"storedProcedureParameters": {
								"create_schema_script": {
									"value": {
										"value": "@activity('LU - Create schema script').output.firstrow.CreateSchemaStatement",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_sqldb_dwh",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LU - Drop and-or Create Table script",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "sp Create Schema from script",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[elt].[spCreateTableFromMetadata]",
								"storedProcedureParameters": {
									"system_name": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.system_name",
											"type": "Expression"
										}
									},
									"entity_name": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.entity_name",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sql_mdb_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "sp Drop and-or Create Table",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "LU - Drop and-or Create Table script",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[elt].[spCreateTableFromMetadata]",
							"storedProcedureParameters": {
								"create_table_script": {
									"value": {
										"value": "@activity('LU - Drop and-or Create Table script').output.firstrow.CreateTableStatement",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ls_sqldb_dwh",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"entity_name": {
						"type": "string"
					},
					"system_name": {
						"type": "string"
					},
					"source_entity_file_name": {
						"type": "string"
					},
					"source_entity_folder_path": {
						"type": "string"
					},
					"source_entity_file_structure": {
						"type": "array"
					},
					"sink_entity_name": {
						"type": "string"
					},
					"sink_entity_structure": {
						"type": "array"
					},
					"source_sink_mapping": {
						"type": "array"
					},
					"process_run_id": {
						"type": "string"
					},
					"process_run_date": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ELT DWH/20 RawToStaging"
				},
				"annotations": [],
				"lastPublishTime": "2020-10-15T16:10:32Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/ds_datalake')]",
				"[concat(variables('workspaceId'), '/datasets/ds_sql_dwh_table')]",
				"[concat(variables('workspaceId'), '/datasets/ds_sql_mdb_table')]",
				"[concat(variables('workspaceId'), '/linkedServices/ls_sqldb_dwh')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/30 StagingToDWH')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Lookup Levels",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[elt].[spLookupLevels]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sql_dwh_sp",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach Level",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup Levels",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Levels').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline 31 StagingToStorage",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "Lookup Stored Procedures",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "31 StagingToDWH - Stored Procedures",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"procedures": {
												"value": "@activity('Lookup Stored Procedures').output.value",
												"type": "Expression"
											},
											"process_run_id": {
												"value": "@pipeline().parameters.process_run_id",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Lookup Stored Procedures",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[elt].[spLookupStoredProcedures]",
											"storedProcedureParameters": {
												"level": {
													"type": "Int32",
													"value": {
														"value": "@{item().Level}",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "ds_sql_dwh_sp",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": false
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"process_run_id": {
						"type": "int"
					},
					"process_run_date": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ELT DWH/30 StagingToDWH"
				},
				"annotations": [],
				"lastPublishTime": "2020-10-15T16:10:33Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/ds_sql_dwh_sp')]",
				"[concat(variables('workspaceId'), '/pipelines/31 StagingToDWH - Stored Procedures')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/31 StagingToDWH - Stored Procedures')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "ForEach Stored Procedure",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.procedures",
								"type": "Expression"
							},
							"batchCount": 50,
							"activities": [
								{
									"name": "Load_Stored Procedure",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": {
												"value": "@item().Procedure",
												"type": "Expression"
											},
											"storedProcedureParameters": {
												"PipelineRunID": {
													"type": "Guid",
													"value": {
														"value": "@pipeline().RunId",
														"type": "Expression"
													}
												},
												"ProcessRunID": {
													"type": "Int32",
													"value": {
														"value": "@pipeline().parameters.process_run_id",
														"type": "Expression"
													}
												},
												"TaskName": {
													"type": "String",
													"value": {
														"value": "@item().Procedure",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "ds_sql_dwh_sp",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": false
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"procedures": {
						"type": "array"
					},
					"process_run_id": {
						"type": "int"
					}
				},
				"folder": {
					"name": "ELT DWH/30 StagingToDWH"
				},
				"annotations": [],
				"lastPublishTime": "2020-10-15T16:10:32Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/ds_sql_dwh_sp')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Master')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Execute 00 MDB",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "00 MDB",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"process_run_id": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"process_run_date": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute 10 SourceToRaw",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute 00 MDB",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "10 SourceToRaw",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"process_run_id": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"process_run_date": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								},
								"use_case_code": {
									"value": "@pipeline().parameters.use_case_code",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute 20 RawToStaging",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute 10 SourceToRaw",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "20 RawToStaging",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"process_run_id": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"process_run_date": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								},
								"use_case_code": {
									"value": "@pipeline().parameters.use_case_code",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Execute 30 StagingToDWH",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute 20 RawToStaging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "30 StagingToDWH",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"process_run_id": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"process_run_date": {
									"value": "@pipeline().TriggerTime",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"use_case_code": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/00 MDB')]",
				"[concat(variables('workspaceId'), '/pipelines/10 SourceToRaw')]",
				"[concat(variables('workspaceId'), '/pipelines/20 RawToStaging')]",
				"[concat(variables('workspaceId'), '/pipelines/30 StagingToDWH')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Servicenow metadata - find parent tables')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "Set sys_id_init",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Set table name",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('sys_id'), 'stop')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Get parent of table",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "[parameters('Servicenow metadata - find parent tables_webUrl')]",
											"type": "Expression"
										},
										"connectVia": {
											"referenceName": "AutoResolveIntegrationRuntime",
											"type": "IntegrationRuntimeReference"
										},
										"method": "GET",
										"headers": {},
										"authentication": {
											"type": "Basic",
											"username": "vo-compass-itbm-portfolio",
											"password": {
												"type": "AzureKeyVaultSecret",
												"store": {
													"referenceName": "AzureKeyVault1",
													"type": "LinkedServiceReference"
												},
												"secretName": "servicenow"
											}
										}
									}
								},
								{
									"name": "Set sys_id",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Get parent of table",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "sys_id",
										"value": {
											"value": "@if(greater(length(string(activity('Get parent of table').output.result[0]['super_class'])), 0), activity('Get parent of table').output.result[0]['super_class']['value'], 'stop' )",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set table name _",
									"type": "AppendVariable",
									"dependsOn": [
										{
											"activity": "Get parent of table",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "parent_tables",
										"value": {
											"value": "@activity('Get parent of table').output.result[0]['name']",
											"type": "Expression"
										}
									}
								}
							],
							"timeout": "0.12:00:00"
						}
					},
					{
						"name": "Set sys_id_init",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "sys_id",
							"value": {
								"value": "@pipeline().parameters.sys_id",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set table name",
						"type": "AppendVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "parent_tables",
							"value": {
								"value": "@pipeline().parameters.table_name",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[dbo].[insert_parent_tables]",
							"storedProcedureParameters": {
								"parent_tables": {
									"value": {
										"value": "@string(variables('final_array'))",
										"type": "Expression"
									},
									"type": "String"
								},
								"base_table": {
									"value": {
										"value": "@pipeline().parameters.base_table",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Until1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "final_array",
							"value": {
								"value": "@variables('parent_tables')",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"sys_id": {
						"type": "string"
					},
					"table_name": {
						"type": "string"
					},
					"base_table": {
						"type": "string"
					}
				},
				"variables": {
					"sys_id": {
						"type": "String"
					},
					"parent_tables": {
						"type": "Array"
					},
					"final_array": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "SN metadata"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureSqlDatabase1')]",
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/linkedServices/AzureKeyVault1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Servicenow metadata')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "ForEach table",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@createArray('pm_project', 'issue', 'pm_portfolio', 'pm_project_task', 'project_status', 'risk', 'dmn_demand')",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Get table information",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "[parameters('Servicenow metadata_webUrl')]",
											"type": "Expression"
										},
										"connectVia": {
											"referenceName": "AutoResolveIntegrationRuntime",
											"type": "IntegrationRuntimeReference"
										},
										"method": "GET",
										"headers": {},
										"authentication": {
											"type": "Basic",
											"username": "vo-compass-itbm-portfolio",
											"password": {
												"type": "AzureKeyVaultSecret",
												"store": {
													"referenceName": "AzureKeyVault1",
													"type": "LinkedServiceReference"
												},
												"secretName": "servicenow"
											}
										}
									}
								},
								{
									"name": "If base table has parent",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get table information",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@greater(length(string(activity('Get table information').output.result[0]['super_class'])), 0)",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Stored procedure1",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[dbo].[insert_parent_tables]",
													"storedProcedureParameters": {
														"parent_tables": {
															"value": {
																"value": "@string(createArray(activity('Get table information').output.result[0]['name']))",
																"type": "Expression"
															},
															"type": "String"
														},
														"base_table": {
															"value": {
																"value": "@item()",
																"type": "Expression"
															},
															"type": "String"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "AzureSqlDatabase1",
													"type": "LinkedServiceReference"
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Execute metadata 2 pipeline SN",
												"type": "ExecutePipeline",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"pipeline": {
														"referenceName": "Servicenow metadata - find parent tables",
														"type": "PipelineReference"
													},
													"waitOnCompletion": true,
													"parameters": {
														"sys_id": {
															"value": "@activity('Get table information').output.result[0]['super_class']['value']",
															"type": "Expression"
														},
														"table_name": {
															"value": "@activity('Get table information').output.result[0]['name']",
															"type": "Expression"
														},
														"base_table": {
															"value": "@item()",
															"type": "Expression"
														}
													}
												}
											}
										]
									}
								},
								{
									"name": "Get all parent tables",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "If base table has parent",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "SELECT STRING_AGG(REPLACE(value, '\"', ''), '^OR') AS transformed_value\nFROM (\n    SELECT name FROM dbo.tables where base_table = '@{item()}' ) as subquery \nCROSS APPLY OPENJSON(subquery.name)\n    WITH (value VARCHAR(500) '$')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "AzureSqlTable1",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "Get SN metadata for table and parent table",
									"type": "WebActivity",
									"dependsOn": [
										{
											"activity": "Get all parent tables",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"url": {
											"value": "[parameters('Servicenow metadata_webUrl')]",
											"type": "Expression"
										},
										"connectVia": {
											"referenceName": "AutoResolveIntegrationRuntime",
											"type": "IntegrationRuntimeReference"
										},
										"method": "GET",
										"headers": {},
										"authentication": {
											"type": "Basic",
											"username": "vo-compass-itbm-portfolio",
											"password": {
												"type": "AzureKeyVaultSecret",
												"store": {
													"referenceName": "AzureKeyVault1",
													"type": "LinkedServiceReference"
												},
												"secretName": "servicenow"
											}
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"wat": {
						"type": "Array"
					}
				},
				"folder": {
					"name": "SN metadata"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('workspaceId'), '/linkedServices/AzureKeyVault1')]",
				"[concat(variables('workspaceId'), '/linkedServices/AzureSqlDatabase1')]",
				"[concat(variables('workspaceId'), '/pipelines/Servicenow metadata - find parent tables')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sn_test')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "LU_Structure",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_source_servicenow_tableapi_http",
								"type": "DatasetReference",
								"parameters": {
									"relative_api_path": "sys_dictionary",
									"filter_on_table": "pm_project",
									"fields_to_include": "element,internal_type,max_length,unique,mandatory"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "LU_Structure_Type",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "LU_Structure",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[elt].[spGetFieldTypeAndDataType]",
								"storedProcedureParameters": {
									"json": {
										"type": "String",
										"value": {
											"value": "@string(activity('LU_Structure').output.value[0].result)",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sql_mdb_table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"process_run_id": {
						"type": "string",
						"defaultValue": "-1"
					},
					"system_code": {
						"type": "string",
						"defaultValue": "snprojects"
					},
					"system_name": {
						"type": "string",
						"defaultValue": "servicenow-projects"
					},
					"system_type": {
						"type": "string",
						"defaultValue": "json"
					}
				},
				"folder": {
					"name": "MDB"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-04T14:48:06Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/ds_source_servicenow_tableapi_http')]",
				"[concat(variables('workspaceId'), '/datasets/ds_sql_mdb_table')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sn_test_main')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "LU_Tables",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT * FROM elt.MetadataTables\nWHERE IsActive = 1 AND SystemCode = 'snprojects'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_sql_mdb_table",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "FE_INS_Metadata",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LU_Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LU_Tables').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 15,
							"activities": [
								{
									"name": "Insert_Structure",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "LU_Structure_Type",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[elt].[spInsertMetadata]",
										"storedProcedureParameters": {
											"Json": {
												"value": {
													"value": "@string(activity('LU_Structure_Type').output.value)",
													"type": "Expression"
												},
												"type": "String"
											},
											"lSchema": {
												"value": {
													"value": "@item().SchemaName",
													"type": "Expression"
												},
												"type": "String"
											},
											"lTable": {
												"value": {
													"value": "@item().EntityName",
													"type": "Expression"
												},
												"type": "String"
											},
											"SystemCode": {
												"value": {
													"value": "@pipeline().parameters.system_code",
													"type": "Expression"
												},
												"type": "String"
											},
											"SystemName": {
												"value": {
													"value": "@pipeline().parameters.system_name",
													"type": "Expression"
												},
												"type": "String"
											},
											"SystemType": {
												"value": {
													"value": "@pipeline().parameters.system_type",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "ls_sqldb_mdb",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "LU_Structure",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "JsonSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "JsonReadSettings"
											}
										},
										"dataset": {
											"referenceName": "ds_source_servicenow_tableapi_http",
											"type": "DatasetReference",
											"parameters": {
												"relative_api_path": "sys_dictionary",
												"filter_on_table": {
													"value": "@item().EntityName",
													"type": "Expression"
												},
												"fields_to_include": "element,internal_type,max_length,unique,mandatory"
											}
										},
										"firstRowOnly": false
									}
								},
								{
									"name": "LU_Structure_Type",
									"type": "Lookup",
									"dependsOn": [
										{
											"activity": "LU_Structure",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderStoredProcedureName": "[elt].[spGetFieldTypeAndDataType]",
											"storedProcedureParameters": {
												"json": {
													"type": "String",
													"value": {
														"value": "@string(activity('LU_Structure').output.value[0].result)",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "ds_sql_mdb_table",
											"type": "DatasetReference",
											"parameters": {}
										},
										"firstRowOnly": false
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"process_run_id": {
						"type": "string",
						"defaultValue": "-1"
					},
					"system_code": {
						"type": "string",
						"defaultValue": "snprojects"
					},
					"system_name": {
						"type": "string",
						"defaultValue": "servicenow-projects"
					},
					"system_type": {
						"type": "string",
						"defaultValue": "json"
					}
				},
				"folder": {
					"name": "MDB"
				},
				"annotations": [],
				"lastPublishTime": "2020-12-04T14:48:06Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/ds_sql_mdb_table')]",
				"[concat(variables('workspaceId'), '/linkedServices/ls_sqldb_mdb')]",
				"[concat(variables('workspaceId'), '/datasets/ds_source_servicenow_tableapi_http')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ds_datalake')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_st_datalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Filesystem": {
						"type": "string"
					},
					"FolderPath": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FolderPath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().Filesystem",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_st_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ds_datalake_delete')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "This dataset makes sure that files which exceed a retention period are deleted. ",
				"linkedServiceName": {
					"referenceName": "ls_st_datalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"folder_path": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@dataset().folder_path",
							"type": "Expression"
						},
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_st_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ds_datalake_json')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_st_datalake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Filesystem": {
						"type": "string"
					},
					"FolderPath": {
						"type": "string"
					},
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().FolderPath",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().Filesystem",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_st_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ds_source_cmptest')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_source_cmptest",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_source_cmptest')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ds_source_dynamics_table')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_source_dynamics",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_source_dynamics')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ds_source_servicenow_tableapi_http')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_source_servicenow_tableapi_http",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"relative_api_path": {
						"type": "string"
					},
					"filter_on_table": {
						"type": "string"
					},
					"fields_to_include": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@concat(dataset().relative_api_path, '?sysparm_query=name=', dataset().filter_on_table, '&sysparm_fields=', dataset().fields_to_include)",
							"type": "Expression"
						}
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_source_servicenow_tableapi_http')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ds_source_servicenow_tableapi_rest')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_source_servicenow_tableapi_rest",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"relative_api_path": {
						"type": "string"
					},
					"current_date": {
						"type": "string"
					},
					"incremental": {
						"type": "bool",
						"defaultValue": true
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@if(equals(dataset().incremental, true), concat(dataset().relative_api_path, '?sysparm_limit=1000&sysparm_offset={offset}&sysparm_query=sys_updated_on>', addDays(formatDateTime(dataset().current_date, 'yyyy-MM-dd'), -1), '^sys_updated_on<', dataset().current_date), concat(dataset().relative_api_path, '?sysparm_limit=1000&sysparm_offset={offset}'))",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_source_servicenow_tableapi_rest')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ds_sql_dwh_sp')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sqldb_dwh",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_sqldb_dwh')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ds_sql_dwh_table')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sqldb_dwh",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"table_name": {
						"type": "string"
					},
					"structure": {
						"type": "string"
					},
					"schema": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().table_name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_sqldb_dwh')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ds_sql_mdb_table')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sqldb_mdb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/ls_sqldb_mdb')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureKeyVault1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ls_kv_cmp')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [
					"Core"
				],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('ls_kv_cmp_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ls_source_cmptest')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [
					"DataSource"
				],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ls_source_cmptest_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ls_source_dynamics')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "The Dynamics 365 environment from the E&E tender support desk",
				"annotations": [
					"DataSource"
				],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ls_source_dynamics_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ls_source_servicenow_tableapi_http')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [
					"DataSource"
				],
				"type": "HttpServer",
				"typeProperties": {
					"url": "https://vanoorddev.service-now.com/api/now/table/",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "vo-compass-itbm-portfolio",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ls_kv_cmp",
							"type": "LinkedServiceReference"
						},
						"secretName": "servicenow-projects-api-password"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/linkedServices/ls_kv_cmp')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ls_source_servicenow_tableapi_rest')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [
					"DataSource"
				],
				"type": "RestService",
				"typeProperties": {
					"url": "https://vanoorddev.service-now.com/api/now/table/",
					"enableServerCertificateValidation": true,
					"authenticationType": "Basic",
					"userName": "vo-compass-itbm-portfolio",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "ls_kv_cmp",
							"type": "LinkedServiceReference"
						},
						"secretName": "servicenow-projects-api-password"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/linkedServices/ls_kv_cmp')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ls_sqldb_dwh')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [
					"Core"
				],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ls_sqldb_dwh_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ls_sqldb_mdb')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [
					"Core"
				],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('ls_sqldb_mdb_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/ls_st_datalake')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [
					"Core"
				],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "https://stvocmpdevweu002.dfs.core.windows.net/"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/synapse-seb-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('synapse-seb-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/synapse-seb-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "https://saopco2.dfs.core.windows.net"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sywsvocmpdevweu001-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('sywsvocmpdevweu001-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sywsvocmpdevweu001-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "https://stvocmpdevweu001.dfs.core.windows.net"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/t_dynamics_daily_07_30')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Triggers Dynamics pipelines everyday at 7.30 am.",
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Master",
							"type": "PipelineReference"
						},
						"parameters": {
							"use_case_code": "dynamics"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "[parameters('t_dynamics_daily_07_30_freq')]",
						"interval": "[parameters('t_dynamics_daily_07_30_properties_typeProperties_recurrence_triggerSuffix')]",
						"startTime": "[parameters('t_dynamics_daily_07_30_properties_typeProperties_recurrence_startTime')]",
						"timeZone": "[parameters('t_dynamics_daily_07_30_properties_typeProperties_recurrence_timeZone')]",
						"schedule": "[parameters('t_dynamics_daily_07_30_properties_typeProperties_recurrence_schedule')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/Master')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/t_master_daily_07')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "A daily trigger of the masterpipeline which runs at 07:00 CET",
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Master",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "[parameters('t_master_daily_07_freq')]",
						"interval": "[parameters('t_master_daily_07_properties_typeProperties_recurrence_triggerSuffix')]",
						"startTime": "[parameters('t_master_daily_07_properties_typeProperties_recurrence_startTime')]",
						"timeZone": "[parameters('t_master_daily_07_properties_typeProperties_recurrence_timeZone')]",
						"schedule": "[parameters('t_master_daily_07_properties_typeProperties_recurrence_schedule')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/Master')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": "[parameters('AutoResolveIntegrationRuntime_properties_typeProperties_computeProperties')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/default')]",
			"type": "Microsoft.Synapse/workspaces/managedVirtualNetworks",
			"apiVersion": "2019-06-01-preview",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/default/mpe_sywsvocmpdevweu001_dwh_sql')]",
			"type": "Microsoft.Synapse/workspaces/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"privateLinkResourceId": "[parameters('mpe_sywsvocmpdevweu001_dwh_sql_properties_privateLinkResourceId')]",
				"groupId": "sqlServer",
				"fqdns": [
					"sql-vo-cmp-dev-weu-001.database.windows.net"
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/default/mpe_sywsvocmpdevweu001_dynamics_sql')]",
			"type": "Microsoft.Synapse/workspaces/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"privateLinkResourceId": "[parameters('mpe_sywsvocmpdevweu001_dynamics_sql_properties_privateLinkResourceId')]",
				"groupId": "sqlServer",
				"fqdns": [
					"sql-vo-dyn-acc-weu-001.database.windows.net"
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/default/mpe_sywsvocmpdevweu001_stvocmpdevweu002_blob')]",
			"type": "Microsoft.Synapse/workspaces/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"privateLinkResourceId": "[parameters('mpe_sywsvocmpdevweu001_stvocmpdevweu002_blob_properties_privateLinkResourceId')]",
				"groupId": "blob",
				"fqdns": [
					"stvocmpdevweu002.blob.core.windows.net"
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/default/mpe_sywsvocmpdevweu001_stvocmpdevweu002_dfs')]",
			"type": "Microsoft.Synapse/workspaces/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"privateLinkResourceId": "[parameters('mpe_sywsvocmpdevweu001_stvocmpdevweu002_dfs_properties_privateLinkResourceId')]",
				"groupId": "dfs",
				"fqdns": [
					"stvocmpdevweu002.dfs.core.windows.net"
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/default/synapse-ws-sql--sywsvocmpdevweu001')]",
			"type": "Microsoft.Synapse/workspaces/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"privateLinkResourceId": "[parameters('synapse-ws-sql--sywsvocmpdevweu001_properties_privateLinkResourceId')]",
				"groupId": "sql",
				"fqdns": [
					"sywsvocmpdevweu001.8d6b3b62-4de6-416f-bc03-f1e31b34da66.sql.azuresynapse.net"
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/default/synapse-ws-sqlOnDemand--sywsvocmpdevweu001')]",
			"type": "Microsoft.Synapse/workspaces/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"privateLinkResourceId": "[parameters('synapse-ws-sqlOnDemand--sywsvocmpdevweu001_properties_privateLinkResourceId')]",
				"groupId": "sqlOnDemand",
				"fqdns": [
					"sywsvocmpdevweu001-ondemand.8d6b3b62-4de6-416f-bc03-f1e31b34da66.sql.azuresynapse.net"
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureSqlTable1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabase1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "name",
						"type": "varchar"
					},
					{
						"name": "id",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tables"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureSqlDatabase1')]"
			]
		}
	]
}